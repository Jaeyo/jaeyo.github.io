{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/git-delete-branch-and-push/","webpackCompilationHash":"54a5648d2e1ebf85bf0b","result":{"data":{"site":{"siteMetadata":{"title":"Hello, there","author":"Jaeyo"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/look-back-on-8-years-2/"},"frontmatter":{"title":"8년 간의 개발자 생활 회고 (2)","tags":["tech","look_back"]}}},{"node":{"fields":{"slug":"/look-back-on-8-years-1/"},"frontmatter":{"title":"8년 간의 개발자 생활 회고 (1)","tags":["tech","look_back"]}}},{"node":{"fields":{"slug":"/contribute-code-into-telegraf/"},"frontmatter":{"title":"오픈소스 프로젝트에 코드 기여한 이야기","tags":["tech","open source","telegraf"]}}},{"node":{"fields":{"slug":"/naming-is-important/"},"frontmatter":{"title":"작명의 중요성","tags":["daily"]}}},{"node":{"fields":{"slug":"/move-to-another-place/"},"frontmatter":{"title":"새로운 곳으로 이사","tags":["daily"]}}},{"node":{"fields":{"slug":"/git-delete-branch-and-push/"},"frontmatter":{"title":"Git - branch 삭제 후 push","tags":["tech","git"]}}},{"node":{"fields":{"slug":"/bash-is-not-async/"},"frontmatter":{"title":"오늘의 삽질 - 괜히 Bash 만 의심했다.","tags":["tech","trouble shooting"]}}},{"node":{"fields":{"slug":"/better-than-yesterday/"},"frontmatter":{"title":"연봉과 연차의 무게","tags":["tech","career"]}}},{"node":{"fields":{"slug":"/error-while-building-qmk_firmware/"},"frontmatter":{"title":"qmk_firmware 빌드 시에 chibios 관련 에러 발생","tags":["tech","keyboard"]}}},{"node":{"fields":{"slug":"/reselect/"},"frontmatter":{"title":"reselect","tags":["tech"]}}},{"node":{"fields":{"slug":"/aws-api-ip-based-access-control/"},"frontmatter":{"title":"AWS API, IP 기반으로 접근 제한하기","tags":["tech","aws"]}}},{"node":{"fields":{"slug":"/shame/"},"frontmatter":{"title":"조중균의 세계를 읽었다.","tags":["daily"]}}},{"node":{"fields":{"slug":"/snut-2006-3/"},"frontmatter":{"title":"2006년의 서울과학기술대학교 (3)","tags":["daily"]}}},{"node":{"fields":{"slug":"/snut-2006-2/"},"frontmatter":{"title":"2006년의 서울과학기술대학교 (2)","tags":["daily"]}}},{"node":{"fields":{"slug":"/snut-2006-1/"},"frontmatter":{"title":"2006년의 서울과학기술대학교 (1)","tags":["daily"]}}},{"node":{"fields":{"slug":"/how-to-develop-ridistory-frontend/"},"frontmatter":{"title":"리디스토리 프론트엔드 개발기","tags":["tech","react"]}}},{"node":{"fields":{"slug":"/life-with-rainbow-colors/"},"frontmatter":{"title":"삶은 무지개 색이어야 한다.","tags":["daily"]}}},{"node":{"fields":{"slug":"/drive/"},"frontmatter":{"title":"운전을 하고 싶다","tags":["daily"]}}},{"node":{"fields":{"slug":"/mariadb-multi-source-replication/"},"frontmatter":{"title":"mariadb multi source replication","tags":["tech","mariadb"]}}},{"node":{"fields":{"slug":"/too-many-open-files/"},"frontmatter":{"title":"Too many open files","tags":["tech","trouble shooting"]}}},{"node":{"fields":{"slug":"/weird-requests/"},"frontmatter":{"title":"아닌 밤중에 리퀘스트가 튄다?","tags":["tech","trouble shooting"]}}},{"node":{"fields":{"slug":"/spaces/"},"frontmatter":{"title":"겹겹의 공간들","tags":["daily"]}}},{"node":{"fields":{"slug":"/job-interview/"},"frontmatter":{"title":"이직 면접 이야기","tags":["career"]}}}]},"markdownRemark":{"id":"6b64d3fd-8ebe-57fb-b647-29d059c5a507","excerpt":"git에서 브랜치를 따서 작업을 하고 머지된 이후에는 자연스레 작업 브랜치는 날리게 된다. Github 의 풀 리퀘스트 같은 수단을 이용하게 되면 머지 이후에  버튼을 통해 쉽게 remote 상의 브랜치를 제거할 수 있으나 로컬에서 바로 머지한 경우에는 로컬의 브랜치와 remote…","html":"<p>git에서 브랜치를 따서 작업을 하고 머지된 이후에는 자연스레 작업 브랜치는 날리게 된다. Github 의 풀 리퀘스트 같은 수단을 이용하게 되면 머지 이후에 <code class=\"language-text\">Delete Branch</code> 버튼을 통해 쉽게 remote 상의 브랜치를 제거할 수 있으나 로컬에서 바로 머지한 경우에는 로컬의 브랜치와 remote 의 브랜치를 모두 제거해주어야 한다. 헌데 로컬 브랜치 제거는 괜찮은데 remote 브랜치 제거 명령어를 항상 까먹는다.</p>\n<p>명령어는 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch -D branch-name  <span class=\"token comment\"># local branch 제거</span>\n<span class=\"token function\">git</span> push origin :branch-name <span class=\"token comment\"># remote branch 제거</span></code></pre></div>\n<p>remote 브랜치 제거 명령어를 매번 까먹어서 매번 찾아서 하다가 이걸 그냥 alias 를 걸어놔야 되겠다고 생각했다. 기왕 alias 거는거 local + remote 둘 다 한 번에 제거하게끔 계획했다. 이 과정에서 제거할 브랜치 이름을 argument 로 받아야 하는데 문제는 git alias 에서는 argument 를 지원하고 있지 않다는 것이다. 이 부분을 해결하기 위해 구글링을 해봤지만 뭔가 elegant 한 방법은 찾지 못했고 아래와 같이 구성하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>alias<span class=\"token punctuation\">]</span>\n  <span class=\"token function\">dd</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"!f() {  git branch -D <span class=\"token variable\">$1</span> &amp;&amp; git push origin :<span class=\"token variable\">$1</span>; }; f\"</span></code></pre></div>","fields":{"slug":"/git-delete-branch-and-push/"},"frontmatter":{"title":"Git - branch 삭제 후 push","date":"August 14, 2019","description":null,"tags":["tech","git"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"next":{"fields":{"slug":"/move-to-another-place/"},"frontmatter":{"title":"새로운 곳으로 이사"}},"previous":{"fields":{"slug":"/bash-is-not-async/"},"frontmatter":{"title":"오늘의 삽질 - 괜히 Bash 만 의심했다."}},"slug":"/git-delete-branch-and-push/"}}}