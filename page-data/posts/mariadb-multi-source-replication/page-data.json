{"componentChunkName":"component---src-templates-post-template-jsx","path":"/posts/mariadb-multi-source-replication/","webpackCompilationHash":"c9fc7eaa179b2c034fbf","result":{"data":{"site":{"siteMetadata":{"title":"Blog by Jaeyo","subtitle":"loves writing, music, and developing","copyright":"© All rights reserved.","author":{"name":"Jaeyo","github":"Jaeyo"},"disqusShortname":"","url":"https://jaeyo.github.io"}},"markdownRemark":{"id":"8ef2d4ae-418c-59af-aa1e-15a428d9ddce","html":"<h2>multi source replication 절차</h2>\n<p>slave가 될 mysql 인스턴스의 설정에 아래의 부분을 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># /etc/mysql/maridb.conf.d/50-server.cnf</span>\n<span class=\"token punctuation\">[</span>mysqld<span class=\"token punctuation\">]</span>\nserver_id<span class=\"token operator\">=</span>19823759 <span class=\"token comment\"># master와 겹치지 않게</span>\nreplicate-ignore-db<span class=\"token operator\">=</span>mysql <span class=\"token comment\"># mysql 데이터베이스는 복제하지 않음</span></code></pre></div>\n<p>master 데이터베이스에서 replication 용 계정 생성 후 권한을 부여한다</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">grant replication slave on *.* to ‘repl’@‘%’ identified by ‘<span class=\"token operator\">!</span>repl123’<span class=\"token punctuation\">;</span></code></pre></div>\n<p>mysqldump 를 이용해서 master가 될 데이터베이스에서 덤프를 받는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">mysqldump --databases database_1 database_2 --single_transaction --master-data<span class=\"token operator\">=</span>1 -h host_path -u account -p <span class=\"token operator\">></span> dump.sql</code></pre></div>\n<p>락이 걸리는 걸 방지하기 위해 <code class=\"language-text\">—single-transaction</code> 옵션 추가해야 하며, 덤프를 받은 시점의 binlog 파일과 포지션을 확인하기 위해 <code class=\"language-text\">—master-data=1</code> 옵션 추가한다. 그러면 덤프 파일 상단에 <code class=\"language-text\">change master …</code> 구문이 생성되는데 multi source 로부터 replication 을 받아야 하기 때문에 아래와 같이 수정해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">CHANGE MASTER <span class=\"token string\">'master_name'</span> TO\nmaster_host<span class=\"token operator\">=</span><span class=\"token string\">'host_path'</span>,\nmaster_user<span class=\"token operator\">=</span><span class=\"token string\">'account'</span>,\nmaster_password<span class=\"token operator\">=</span><span class=\"token string\">'password'</span>,\nmaster_port<span class=\"token operator\">=</span>3306,\nMASTER_LOG_FILE<span class=\"token operator\">=</span><span class=\"token string\">'mysql-bin-changelog.052616'</span>, MASTER_LOG_POS<span class=\"token operator\">=</span>886626<span class=\"token punctuation\">;</span> <span class=\"token comment\"># dump에 기록된 그대로 유지</span></code></pre></div>\n<p>만약 덤프 파일이 너무 커서 수정하기가 힘든 경우 아래와 같이 파일을 잘라서 수정한 후에 합치는 방법을 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">head</span> -n 30 dump.sql <span class=\"token operator\">></span> new_dump.sql\n<span class=\"token function\">vim</span> new_dump.sql\n<span class=\"token function\">tail</span> -n +30 dump.sql <span class=\"token operator\">>></span> new_dump.sql</code></pre></div>\n<p>slave가 될 데이터베이스에 덤프를 밀어넣는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">mysql -h hostpath -u account -p database_name <span class=\"token operator\">&lt;</span> dump.sql</code></pre></div>\n<p>여기서 database_name은 덤프 내 여러개의 데이터베이스가 담겨 있다고 해도 그 중 하나만 지정해도 되지만 지정된 데이터베이스는 미리 생성되어 있어야 한다.</p>\n<p>replication 스레드를 시작시킨다: </p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">start</span> slave <span class=\"token string\">'master_name'</span></code></pre></div>\n<h2>기타 유의사항</h2>\n<ul>\n<li>replication 설정을 위해서는 super previleges가 필요한데 aws rds를 이용하면 일반 사용자가 super previleges를 가질 수 없다.</li>\n<li>\n<p>binary log가 너무 빨리 rotate 되는 경우에는 아래와 같이 retention 값을 확인 및 조정할 수 있다.</p>\n<ul>\n<li><code class=\"language-text\">call mysql.rds_show_configuration()</code> 으로 <code class=\"language-text\">binlog retention hours</code> 값 확인</li>\n<li><code class=\"language-text\">call mysql.rds_set_configuration(‘binlog retention hours’, 1);</code></li>\n</ul>\n</li>\n</ul>","fields":{"tagSlugs":null,"slug":"/posts/mariadb-multi-source-replication/"},"frontmatter":{"title":"mariadb multi source replication","tags":null,"date":"2017-04-28T17:51:00.000Z","description":""}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/mariadb-multi-source-replication/"}}}