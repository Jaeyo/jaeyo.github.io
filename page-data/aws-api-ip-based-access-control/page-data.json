{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/aws-api-ip-based-access-control/","webpackCompilationHash":"8f72e345da9bb9bd9e16","result":{"data":{"site":{"siteMetadata":{"title":"Hello, there","author":"Jaeyo"}},"markdownRemark":{"id":"d7dfe7fd-8cc2-598d-b25a-870b3c23a763","excerpt":"EC2 상의 인스턴스나 로드밸런서에 특정 IP 대역만 접근 가능하도록 설정하고 싶다면 Security Group 혹은 ACL을 이용하면 된다. 하지만 그 외의 AWS에서 제공하는 API 들에 대해서 IP 기반으로 접근제한을 걸고 싶다면 Security Group, ACL…","html":"<p>EC2 상의 인스턴스나 로드밸런서에 특정 IP 대역만 접근 가능하도록 설정하고 싶다면 Security Group 혹은 ACL을 이용하면 된다. 하지만 그 외의 AWS에서 제공하는 API 들에 대해서 IP 기반으로 접근제한을 걸고 싶다면 Security Group, ACL 로는 불가능하다. 이 부분은 IAM의 Policy로 해결을 봐야 한다.</p>\n<p>예를 들어, AWS System Manager의 Parameter Store에 접근해서 데이터를 읽어오는 API를 IP 기반으로 제한하고 싶다고 가정하자.\n그럼 일단 Parameter Store에 대한 기본 Policy 부터 확인해보자.\n“AWS IAM -> 정책” 로 들어가서 찾아볼 수 있다.</p>\n<p>확인해본 결과 <code class=\"language-text\">AmazonSSMReadOnlyAccess</code> 라는 정책이 있다. 정책 상세값은 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"Version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2012-10-17\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"Statement\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Effect\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Allow\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"Action\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"ssm:Describe*\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"ssm:Get*\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"ssm:List*\"</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"Resource\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"*\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>우리는 여기서 IP 기반 조건만 넣어주면 된다.\n일단 기본 정책 <code class=\"language-text\">AmazonSSMReadOnlyAccess</code>의 상세 JSON 값을 복사한 후에 새로운 정책을 생성해보자.</p>\n<p>“AWS IAM -> 정책 -> 정책 생성”으로 들어가면 정책을 생성하기 위한 도구로써 시각적 편집기와 JSON 입력창이 제공되는데 JSON 입력창을 이용하여 다음의 내용을 입력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"Version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2012-10-17\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"Statement\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Effect\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Allow\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"Action\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"ssm:Describe*\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"ssm:Get*\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"ssm:List*\"</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"Resource\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"Condition\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"IpAddress\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"aws:SourceIp\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                        <span class=\"token string\">\"{IP_ADDRESS_TO_ALLOW}\"</span>\n                    <span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>처음봤던 기본 조건에 비교하여 달라진 점은 “Condition” 부분이 추가되었다는 것이다. <code class=\"language-text\">{IP_ADDRESS_TO_ALLOW}</code> 부분을 적절하게 Allow 할 IP로 대체하면 된다.\n단, aws api를 요청하는 경우에는 대부분의 경우 source ip가 외부 ip로 찍히게 되므로 사설 ip 대역은 설정해놓으면 안된다.</p>\n<p>이런식으로 정책을 설정한 뒤에 특정 계정에게 적용해놓으면 해당 계정을 통해서는 기 설정해놓은 IP 대역대에서만 접근할 수 있다. </p>\n<p>본문에는 “Allow” 기반으로 했는데 “Allow” 대신 “Deny”로 바꾸고 “IpAddress”를 “NotIpAddress”로 바꿔도 동일하게 동작 할 것이다.</p>\n<p>IAM 정책상에서 동일 리소스 및 동작에 대해 Allow와 Deny가 같이 존재한다면 Deny가 우선순위를 가진다.</p>","frontmatter":{"title":"AWS API, IP 기반으로 접근 제한하기","date":"January 30, 2018","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"next":{"fields":{"slug":"/reselect/"},"frontmatter":{"title":"reselect"}},"previous":{"fields":{"slug":"/shame/"},"frontmatter":{"title":"조중균의 세계를 읽었다."}},"slug":"/aws-api-ip-based-access-control/"}}}