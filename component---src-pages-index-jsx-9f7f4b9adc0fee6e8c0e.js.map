{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./src/styles/variables.js","webpack:///./src/components/Layout/index.jsx","webpack:///./src/utils/context-utils.js","webpack:///./src/pages/profile.png","webpack:///./src/components/common/content.jsx","webpack:///./src/components/Menu/index.jsx","webpack:///./src/components/Links/index.jsx","webpack:///./src/components/Sidebar/index.jsx","webpack:///./src/components/Post/index.jsx"],"names":["IndexRoute","render","_getSiteMetadata","getSiteMetadata","this","props","title","subtitle","items","data","allMarkdownRemark","edges","map","post","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Post__WEBPACK_IMPORTED_MODULE_4__","key","node","fields","slug","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","name","content","_components_Sidebar__WEBPACK_IMPORTED_MODULE_5__","_components_common_content__WEBPACK_IMPORTED_MODULE_7__","Component","pageQuery","__webpack_require__","d","__webpack_exports__","colorBase","colorPrimary","colorSecondary","colorGray","colorGrayBg","typographicBaseFontSize","typographicSmallFontSize","typographicBaseLineHeight","typographicBaseFontColor","typographicLeading","layoutPostSingleMaxWidth","layoutPostSingleWidth","layoutBreakpointSm","layoutBreakpointMd","polished__WEBPACK_IMPORTED_MODULE_0__","lighten","Math","round","Layout","componentDidMount","ReactGA","initialize","pageview","window","location","pathname","search","children","react__WEBPACK_IMPORTED_MODULE_3___default","Wrapper","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","defaultTitle","styled","div","_templateObject","site","siteMetadata","module","exports","p","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Content","_ref","className","Menu","menu","react_default","MenuWrapper","MenuList","item","MenuListItem","path","MenuListItemLink","to","activeStyle","color","borderBottom","label","nav","ul","_templateObject2","li","_templateObject3","Link","_templateObject4","Links","author","links","telegram","twitter","github","vk","rss","email","LinksWrapper","LinksList","LinksListItem","href","target","rel","Links_templateObject","Links_templateObject2","Links_templateObject3","Sidebar","copyright","authorBlock","get","gatsby_browser_entry","AuthorPhoto","src","profilePic","width","height","alt","AuthorTitle","AuthorTitleLink","AuthorSubTitle","SidebarWrapper","Inner","Author","Menu_Menu","Links_Links","Copyright","Sidebar_templateObject","Sidebar_templateObject2","Sidebar_templateObject3","img","Sidebar_templateObject4","h1","_templateObject5","_templateObject6","_templateObject7","_templateObject8","Post","_this$props$data$node","frontmatter","date","category","description","_this$props$data$node2","categorySlug","react__WEBPACK_IMPORTED_MODULE_2___default","PostWrapper","Meta","MetaTime","dateTime","moment","format","MetaDivider","MetaCategory","MetaCategoryLink","Title","TitleLink","Description","h2","time","span","_templateObject9"],"mappings":"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","file":"component---src-pages-index-jsx-9f7f4b9adc0fee6e8c0e.js","sourcesContent":["import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Post from '../components/Post'\nimport Sidebar from '../components/Sidebar'\nimport { getSiteMetadata } from '../utils/context-utils'\nimport Content from '../components/common/content'\n\n\nexport default class IndexRoute extends Component {\n  render() {\n    const { title, subtitle } = getSiteMetadata(this.props)\n    const posts = this.props.data.allMarkdownRemark.edges\n\n    const items = posts.map(post => (\n      <Post data={post} key={post.node.fields.slug} />\n    ))\n\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={subtitle} />\n          </Helmet>\n          <Sidebar {...this.props} />\n          <Content>\n            {items}\n          </Content>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        menu {\n          label\n          path\n        }\n        author {\n          name\n          email\n          telegram\n          twitter\n          github\n          rss\n          vk\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: { frontmatter: { layout: { eq: \"post\" }, draft: { ne: true } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import { lighten } from 'polished'\n\n\nexport const colorBase = '#050505'\nexport const colorPrimary = '#b91510'\nexport const colorSecondary = '#0d488b'\nexport const colorWhite = lighten(1, colorBase)\nexport const colorGray = lighten(0.4, colorBase)\nexport const colorGrayBorder = lighten(0.77, colorBase)\nexport const colorGrayBg = lighten(0.79, colorBase)\n\nexport const typographicFontFamily = '\"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif'\n\nexport const typographicRootFontSize = 100\nexport const typographicBaseFontSize = 16 // px\nexport const typographicSmallFontSize = 14 // px\nexport const typographicBaseLineHeight = 1.625\nexport const typographicBaseFontColor = colorBase\nexport const typographicLinkPFontColor = colorPrimary\nexport const typographicLinkSFontColor = colorSecondary\n\nexport const typographicLeading =\n    Math.round(16 * (typographicRootFontSize / 100) * typographicBaseLineHeight)\n\nexport const layoutPostSingleMaxWidth = '945' // px\nexport const layoutPostSingleWidth = `${layoutPostSingleMaxWidth} - 305` // px\n\nexport const layoutWidth = '1070px'\nexport const layoutBreakpointSm = '685px'\nexport const layoutBreakpointMd = '960px'\nexport const layoutBreakpointLg = '1100px'\n","import React, { Component } from 'react'\nimport ReactGA from 'react-ga'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\nimport '../../assets/scss/init.scss'\n\n\nexport default class Layout extends Component {\n  componentDidMount() {\n    ReactGA.initialize('UA-142557602-1')\n    ReactGA.pageview(window.location.pathname + window.location.search)\n  }\n\n  render() {\n    const { children } = this.props\n\n    return (\n      <Wrapper>\n        <Helmet defaultTitle=\"Blog by Jaeyo\" />\n        {children}\n      </Wrapper>\n    )\n  }\n}\n\nconst Wrapper = styled.div`\n  max-width: 66.875rem;\n  margin-left: auto;\n  margin-right: auto;\n`\n","\n\nexport const getSiteMetadata = props => props.data.site.siteMetadata\n","module.exports = __webpack_public_path__ + \"static/profile-03d873445b03a721d7d6afb6095804e2.png\";","import React from 'react'\n\n\nconst Content = ({ children }) => (\n  <div className=\"content\">\n    <div className=\"content__inner\">\n      {children}\n    </div>\n  </div>\n)\n\nexport default Content\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { typographicLeading, typographicBaseFontSize, typographicBaseFontColor, colorPrimary, colorBase } from '../../styles/variables'\n\n\nexport default class Menu extends Component {\n  render() {\n    const menu = this.props.data\n\n    return (\n      <MenuWrapper>\n        <MenuList>\n          {menu.map(item => (\n            <MenuListItem key={item.path}>\n              <MenuListItemLink\n                to={item.path}\n                activeStyle={{\n                  color: colorBase,\n                  borderBottom: `1px solid ${colorBase}`,\n                }}\n              >\n                {item.label}\n              </MenuListItemLink>\n            </MenuListItem>\n          ))}\n        </MenuList>\n      </MenuWrapper>\n    )\n  }\n}\n\nconst MenuWrapper = styled.nav`\n  margin-bottom: ${1 * typographicLeading}px;\n`\n\nconst MenuList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`\n\nconst MenuListItem = styled.li`\n  padding: 0;\n  margin: 10px 0;\n`\n\nconst MenuListItemLink = styled(Link)`\n  font-size: ${typographicBaseFontSize}px;\n  color: ${typographicBaseFontColor};\n  font-weight: 400;\n  border: 0;\n  &:hover, &:focus {\n    color: ${colorPrimary};\n    border-bottom: 1px solid ${colorPrimary};\n  }\n`\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { lighten } from 'polished'\nimport '../../assets/fonts/fontello-771c82e0/css/fontello.css'\nimport { typographicLeading, colorGrayBg, colorBase } from '../../styles/variables'\n\n\nexport default class Links extends Component {\n  render() {\n    const author = this.props.data\n    const links = {\n      telegram: author.telegram,\n      twitter: author.twitter,\n      github: author.github,\n      vk: author.vk,\n      rss: author.rss,\n      email: author.email,\n    }\n\n    return (\n      <LinksWrapper>\n        <LinksList>\n          <LinksListItem>\n            <a\n              href={`https://www.github.com/${links.github}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <i className=\"icon-github\" />\n            </a>\n          </LinksListItem>\n          <LinksListItem>\n            <a href={`mailto:${links.email}`}>\n              <i className=\"icon-mail\" />\n            </a>\n          </LinksListItem>\n          <LinksListItem>\n            <a href={links.rss}>\n              <i className=\"icon-rss\" />\n            </a>\n          </LinksListItem>\n        </LinksList>\n      </LinksWrapper>\n    )\n  }\n}\n\n\nconst LinksWrapper = styled.div`\n  margin-bottom: ${1 * typographicLeading}px;\n`\n\nconst LinksList = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 7px;\n`\n\nconst LinksListItem = styled.li`\n  padding: 0;\n  margin: 0 3px;\n  height: 24px;\n  width: 24px;\n  line-height: 24px;\n  border-radius: 3px;\n  text-align: center;\n  background: ${colorGrayBg};\n\n  & a {\n    border: 0;\n    & i {\n      font-size: 14px;\n      color: ${lighten(0.2, colorBase)};\n    }\n    &:hover, &:focus {\n      & i {\n        color: ${colorBase};\n      }\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport get from 'lodash/get'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { lighten } from 'polished'\nimport Menu from '../Menu'\nimport Links from '../Links'\nimport { getSiteMetadata } from '../../utils/context-utils'\nimport profilePic from '../../pages/profile.png'\nimport { layoutBreakpointSm, layoutBreakpointMd, typographicLeading, colorBase, colorGray, typographicSmallFontSize } from '../../styles/variables'\n\n\nexport default class Sidebar extends Component {\n  render() {\n    const { location } = this.props\n    const {\n      author,\n      subtitle,\n      copyright,\n      menu,\n    } = getSiteMetadata(this.props)\n    const isHomePage = get(location, 'pathname', '/') === '/'\n\n    /* eslint-disable jsx-a11y/img-redundant-alt */\n    const authorBlock = (\n      <div>\n        <Link to=\"/\">\n          <AuthorPhoto\n            src={profilePic}\n            width=\"100\"\n            height=\"100\"\n            alt={author.name}\n          />\n        </Link>\n        {isHomePage ? (\n          <AuthorTitle>\n            <AuthorTitleLink to=\"/\">\n              {author.name}\n            </AuthorTitleLink>\n          </AuthorTitle>\n        ) : (\n          <AuthorTitle>\n            <AuthorTitleLink to=\"/\">\n              {author.name}\n            </AuthorTitleLink>\n          </AuthorTitle>\n        )}\n        <AuthorSubTitle>\n          {subtitle}\n        </AuthorSubTitle>\n      </div>\n    )\n    /* eslint-enable jsx-a11y/img-redundant-alt */\n\n    return (\n      <SidebarWrapper>\n        <Inner>\n          <Author>\n            {authorBlock}\n          </Author>\n          <div>\n            <Menu data={menu} />\n            <Links data={author} />\n            <Copyright>\n              {copyright}\n            </Copyright>\n          </div>\n        </Inner>\n      </SidebarWrapper>\n    )\n  }\n}\n\nconst SidebarWrapper = styled.div`\n  width: 100%;\n\n  @media screen and (min-width: ${layoutBreakpointSm}) {\n    width: calc(99.9% * 5/12 - (1.875rem - 1.875rem * 5/12));\n    &:nth-child(1n) {\n      float: left;\n      margin-right: 1.875rem;\n      clear: none;\n    }\n    &:nth-child(12n + 1) {\n      clear: both;\n    }\n  }\n  @media screen and (min-width: ${layoutBreakpointMd}) {\n    width: calc(99.9% * 1/3 - (1.875rem - 1.875rem * 1/3));\n    &:nth-child(1n) {\n      float: left;\n      margin-right: 1.875rem;\n      clear: none;\n    }\n    &:nth-child(12n + 1) {\n      clear: both;\n    }\n  }\n`\n\nconst Inner = styled.div`\n  position: relative;\n  padding: 25px 20px 0;\n\n  @media screen and (min-width: ${layoutBreakpointSm}) {\n    padding: 30px 20px 0;\n    &:after {\n      background: $color-gray-border;\n      background: linear-gradient(to bottom, $color-gray-border 0%, $color-gray-border 48%, $color-white 100%);\n      position: absolute;\n      content: \"\";\n      width: 1px;\n      height: 540px;\n      top: 30px;\n      right: -10px;\n      bottom: 0;\n    }\n  }\n\n  @media screen and (min-width: ${layoutBreakpointMd}) {\n    padding: 40px;\n  }\n`\n\nconst Author = styled.div``\n\nconst AuthorPhoto = styled.img`\n  display: inline-block;\n  margin-bottom: 0;\n  border-radius: 50%;\n  background-clip: padding-box;\n`\n\nconst AuthorTitle = styled.h1`\n  display: inline-block;\n  font-size: $typographic-base-font-size * 1.125;\n  font-weight: 500;\n  line-height: ${1.125 * typographicLeading}px;\n  margin: ${0.5 * typographicLeading}px 0 ${0.5 * typographicLeading}px ${1 * typographicLeading}px;\n`\n\nconst AuthorTitleLink = styled(Link)`\n  color: ${colorBase};\n  &:hover, &:focus {\n    color: ${colorBase};\n  }\n`\n\nconst AuthorSubTitle = styled.p`\n  color: ${colorGray};\n  line-height: ${1 * typographicLeading}px;\n  margin-bottom: ${1 * typographicLeading}px;\n`\n\nconst Copyright = styled.p`\n  color: ${lighten(0.18, colorGray)};\n  font-size: ${typographicSmallFontSize}px;\n`\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport styled from 'styled-components'\nimport { lighten } from 'polished'\nimport { typographicLeading, typographicBaseFontSize, colorBase, typographicSmallFontSize, colorSecondary, colorPrimary } from '../../styles/variables'\n\nexport default class Post extends Component {\n  render() {\n    const {\n      title,\n      date,\n      category,\n      description,\n    } = this.props.data.node.frontmatter\n    const { slug, categorySlug } = this.props.data.node.fields\n\n    return (\n      <PostWrapper>\n        <Meta>\n          <MetaTime dateTime={moment(date).format('MMMM D, YYYY')}>\n            {moment(date).format('MMMM YYYY')}\n          </MetaTime>\n          <MetaDivider />\n          <MetaCategory key={categorySlug}>\n            <MetaCategoryLink to={categorySlug}>\n              {category}\n            </MetaCategoryLink>\n          </MetaCategory>\n        </Meta>\n        <Title>\n          <TitleLink to={slug}>\n            {title}\n          </TitleLink>\n        </Title>\n        <Description>{description}</Description>\n      </PostWrapper>\n    )\n  }\n}\n\nconst PostWrapper = styled.div`\n  margin-bottom: ${2.25 * typographicLeading}px;\n  &:last-child {\n    margin-bottom: ${0.5 * typographicLeading}px;\n  }\n`\n\nconst Title = styled.h2`\n  font-size: ${typographicBaseFontSize * 1.4875}px;\n  line-height: ${1.5 * typographicLeading}px;\n  margin-top: ${0 * typographicLeading}px;\n  margin-bottom: ${0.5 * typographicLeading}px;\n`\n\nconst TitleLink = styled(Link)`\n  color: ${colorBase};\n  &:hover, &:focus {\n    color: ${colorBase};\n    border-bottom: 1px solid ${colorBase};\n  }\n`\n\nconst Description = styled.p`\n  font-size: ${typographicBaseFontSize}px;\n  line-height: ${1 * typographicLeading}px;\n  margin-bottom: ${0.75 * typographicLeading}px;\n`\n\nconst Meta = styled.div``\n\nconst MetaTime = styled.time`\n  font-size: ${typographicSmallFontSize}px;\n  color: ${colorBase};\n  font-weight: 500;\n  text-transform: uppercase;\n`\n\nconst MetaDivider = styled.span`\n  margin: 0 5px;\n`\n\nconst MetaCategory = styled.span``\n\nconst MetaCategoryLink = styled(Link)`\n  font-size: ${typographicSmallFontSize}px;\n  color: ${colorSecondary};\n  font-weight: 500;\n  text-transform: uppercase;\n  &:hover, &:focus {\n    color: ${lighten(0.3, colorSecondary)};\n  }\n`\n"],"sourceRoot":""}