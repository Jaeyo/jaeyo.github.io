{"version":3,"sources":["webpack:///./src/data/awesome-post-links.ts","webpack:///./src/utils/color.ts","webpack:///./src/components/tag-box.tsx","webpack:///./src/components/clearfix.tsx","webpack:///./src/pages/awesome-posts.tsx","webpack:///./src/utils/typography.ts","webpack:///./src/components/link.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/components/bio.tsx","webpack:///./src/components/nav.tsx"],"names":["postLinks","title","url","tags","isDarkColor","hexColor","result","_hexToRgb","exec","parseInt","colorArray","map","v","Math","pow","StyledSpan","styled","span","withConfig","displayName","componentId","props","bgColor","color","TagBox","_ref","name","onClick","closable","str","hash","i","length","charCodeAt","toString","substr","stringToColor","react_default","a","createElement","String","fromCharCode","defaultProps","Wrapper","div","Clearfix","children","AllTagWrapper","ul","SelectedTagsWrapper","TagLi","li","AwesomePosts","_this","_PureComponent","call","this","state","selectedTags","onSelectTag","tag","Object","assign","indexOf","push","setState","onRemoveTag","splice","renderAllTags","_this2","tagElements","postLink","reduce","acc","index","arr","concat","filter","pos","self","key","tag_box","clearfix","renderSelectedTags","_this3","renderPostLinks","_this4","Array","reverse","awesome_posts_Wrapper","href","target","lib_default","renderWithData","data","layout","location","site","siteMetadata","seo","keywords","bio","nav","render","_this5","gatsby_browser_entry","query","_459041758","PureComponent","__webpack_require__","d","__webpack_exports__","rhythm","styledScale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","typography_theme_github__WEBPACK_IMPORTED_MODULE_2__","typography_theme_github__WEBPACK_IMPORTED_MODULE_2___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","Github","scale","FadeLink","linkProps","_objectWithoutPropertiesLoose","react__WEBPACK_IMPORTED_MODULE_6__","gatsby_plugin_transition_link_AniLink__WEBPACK_IMPORTED_MODULE_5___default","fade","duration","Layout","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","styled_components__WEBPACK_IMPORTED_MODULE_1__","_utils_typography__WEBPACK_IMPORTED_MODULE_2__","_link__WEBPACK_IMPORTED_MODULE_3__","StyledH1","h1","StyledH3","h3","StyledLink","Content","HeaderTitle","pathname","to","Date","getFullYear","SEO","lang","meta","description","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","join","GatsbyImage","forwardRef","ref","react__WEBPACK_IMPORTED_MODULE_4___default","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","Avatar","Bio","_public_static_d_4195216099_json__WEBPACK_IMPORTED_MODULE_2__","fixed","avatar","childImageSharp","alt","imgStyle","borderRadius","_link__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","_utils_typography__WEBPACK_IMPORTED_MODULE_3__","NavLink","Nav"],"mappings":"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","file":"component---src-pages-awesome-posts-tsx-e10087d410bbee0d2e8f.js","sourcesContent":["\n\nexport interface PostLink {\n  title: string\n  url: string\n  tags: string[]\n}\n\nexport const postLinks: PostLink[] = [\n    {\n        title: 'New multi-tenant patterns for building SaaS applications on SQL Database',\n        url: 'https://azure.microsoft.com/ko-kr/blog/new-multi-tenant-patterns-for-building-saas-applications-on-sql-database/',\n        tags: ['SaaS', 'Multi Tenancy'],\n    },\n    {\n        title: 'Go 언어의 GC에 대해',\n        url: 'https://engineering.linecorp.com/ko/blog/go-gc/',\n        tags: ['Go'],\n    },\n    {\n        title: '의지력은 있는 것일까?',\n        url: 'https://medium.com/@flsqja12_33844/의지력의-재발견-14a5580389ed',\n        tags: ['General'],\n    },\n    {\n        title: 'Go 언어에서의 동시성 모델',\n        url: 'http://hamait.tistory.com/934',\n        tags: ['Go'],\n    },\n    {\n        title: 'CockroachDB blog / 고가용성의 역사',\n        url: 'https://marsettler.com/2019/01/04/brief-history-high-availability.html?fbclid=IwAR0u3JexNgreX-fupWLzKwBZKQNRbhoDe4v_sA1_lfxVCr9TghCoxMl94DU',\n        tags: ['CockroachDB'],\n    },\n    {\n        title: '2018년, 내가 모르는 기술들',\n        url: 'https://overreacted.io/ko/things-i-dont-know-as-of-2018/',\n        tags: ['Self Improvement'],\n    },\n    {\n        title: '타다 시스템 아키텍처',\n        url: 'http://engineering.vcnc.co.kr/2019/01/tada-system-architecture/',\n        tags: ['Architecture'],\n    },\n    {\n        title: '사장이 되면 좋을 것 같아?',\n        url: 'https://greypencil.tistory.com/62?category=742519',\n        tags: ['Business'],\n    },\n    {\n        title: '프로그래머 열정을 말하다.',\n        url: 'http://jehyunpark.github.io/book/2017/02/12/the-passionate-programmer.html',\n        tags: ['Self Improvement'],\n    },\n    {\n        title: '왜 Go가 CockroachDB에 올바른 선택인가',\n        url: 'https://hueypark.gitlab.io/post/2018-10-21-why-go-was-the-right-choice-for-cockroachdb/',\n        tags: ['CockroachDB', 'Go'],\n    },\n    {\n        title: 'CockroachDB / Raft를 스케일링하기',\n        url: 'https://hueypark.gitlab.io/post/2018-10-16-cockroachdb-blog-scaling-raft/',\n        tags: ['CockroachDB', 'Go'],\n    },\n    {\n        title: '40대 후반 개발자의 고민에 대하여',\n        url: 'https://brunch.co.kr/@nashorn74/18',\n        tags: ['Self Improvement', 'Career'],\n    },\n    {\n        title: 'Golang - Some useful patterns',\n        url: 'https://blogtitle.github.io/some-useful-patterns/',\n        tags: ['Go'],\n    },\n    {\n        title: '(번역) 기술자의 히포크라테스 선서',\n        url: 'https://blog.fupfin.com/?p=188&utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+fupfin%2Fblog+%28%EC%83%9D%EA%B0%81%ED%95%98%EA%B3%A0+%EB%82%98%EB%88%84%EA%B3%A0+%EA%B3%B5%EA%B0%90%ED%95%98%EA%B8%B0...%29',\n        tags: ['Developer'],\n    },\n    {\n        title: '인턴 지원서',\n        url: 'https://sungmooncho.com/2019/03/02/internship/',\n        tags: ['Resume'],\n    },\n    {\n        title: 'golang - 성능 튜닝하기',\n        url: 'https://jacking75.github.io/go_PerformanceTuning/',\n        tags: ['Go'],\n    },\n    {\n        title: '발표의 정석',\n        url: 'https://drive.google.com/file/d/1uQ5VOXBNk_Nf6V5JUXhKl2pHZY5N1wA4/view?fbclid=IwAR0sEKNnsHnqrtQvbKuDq3LnSeLm6ARClXoWdm02VLrmaJat5rPqz4jDZF4',\n        tags: ['Presentation'],\n    },\n    {\n        title: 'Distributed architecture concepts I learned while building a large payments system',\n        url: 'https://blog.pragmaticengineer.com/distributed-architecture-concepts-i-have-learned-while-building-payments-systems/',\n        tags: ['Architecture'],\n    },\n    {\n        title: '[번역] 웹 아키텍쳐 입문',\n        url: 'https://rhostem.github.io/posts/2018-07-22-web-architecture-101/?fbclid=IwAR3VU3zYhzUllW3VnTew6vj9OD3KSzAPW2E4grasw6ANNHx06_vC9VPjOPg',\n        tags: ['Architecture'],\n    },\n    {\n        title: '확장 가능하지 않은 일을 하라 (Do things that don’t scale)',\n        url: 'https://medium.com/@Jaemyung/do-things-that-dont-scale-6876c5682a75',\n        tags: ['Business'],\n    },\n    {\n        title: 'Software disenchantment',\n        url: 'http://tonsky.me/blog/disenchantment/',\n        tags: ['Developer'],\n    },\n    {\n        title: '사업이 뭘까?',\n        url: 'https://brunch.co.kr/@lkim/137',\n        tags: ['Business'],\n    },\n    {\n        title: '성공하고 싶다면 포기해야 할 13가지',\n        url: 'https://www.vobour.com/%EC%84%B1%EA%B3%B5%ED%95%98%EA%B3%A0-%EC%8B%B6%EB%8B%A4%EB%A9%B4-%ED%8F%AC%EA%B8%B0%ED%95%B4%EC%95%BC-%ED%95%A0-13%EA%B0%80%EC%A7%80-13-things-you-shou',\n        tags: ['Self Improvement'],\n    },\n    {\n        title: '흔한 프로그래머의 작명에 대한 사뭇 진지한 이야기',\n        url: 'https://www.vobour.com/%ED%9D%94%ED%95%9C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%9D%98-%EC%9E%91%EB%AA%85%EC%97%90-%EB%8C%80%ED%95%9C-%EC%82%AC%EB%AD%87-%EC%A7%84%EC%A7%80%ED%95%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0-hkfgq9xqm',\n        tags: ['Clean Code'],\n    },\n    {\n        title: '회사에서 인정받는 8가지 방법',\n        url: 'https://medium.com/@kinghong/%ED%9A%8C%EC%82%AC%EC%97%90%EC%84%9C-%EC%9D%B8%EC%A0%95%EB%B0%9B%EB%8A%94-8%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95-fca247e2e0c1',\n        tags: ['Self Improvement'],\n    },\n    {\n        title: '500 마일 이메일 문제',\n        url: 'https://edykim.com/ko/post/500-mile-email-problem/',\n        tags: ['Trouble Shooting'],\n    },\n    {\n        title: 'Cache 를 다룰 때 알아야할 몇가지 Cache Flush 전략',\n        url: 'https://jins-dev.tistory.com/entry/Cache-%EB%A5%BC-%EB%8B%A4%EB%A3%B0-%EB%95%8C-%EC%95%8C%EC%95%84%EC%95%BC%ED%95%A0-%EB%AA%87%EA%B0%80%EC%A7%80-Cache-Flush-%EC%A0%84%EB%9E%B5',\n        tags: ['Cache'],\n    },\n    {\n        title: '파일(file)에 대한 토막글',\n        url: 'https://sunyzero.tistory.com/260',\n        tags: ['Infra'],\n    },\n    {\n        title: '스터디 모임 방법 몇 가지',\n        url: 'http://agile.egloos.com/m/5830026',\n        tags: ['Study'],\n    },\n    {\n        title: '서비스에 인터페이스를 사용해야 하나?',\n        url: 'https://blog.fupfin.com/?p=81',\n        tags: ['Clean Code', 'OOP'],\n    },\n    {\n        title: '좋은 동료란... (1)',\n        url: 'https://brunch.co.kr/@supims/503',\n        tags: ['Self Improvement']\n    },\n    {\n        title: '좋은 동료란... (2)',\n        url: 'https://brunch.co.kr/@supims/507',\n        tags: ['Self Improvement']\n    },\n    {\n        title: '사람들 앞에만 서면 떨리는 이유',\n        url: 'https://blog.naver.com/delmadang/221486396759',\n        tags: ['Self Improvement']\n    },\n    {\n        title: '흔한 개발자가 두서 없이 쓰는 글 #1',\n        url: 'https://luckyyowu.tistory.com/393',\n        tags: ['Developer']\n    },\n    {\n        title: '나는 그동안 무엇으로 성장했을까?',\n        url: 'http://huns.me/development/2281',\n        tags: ['Developer']\n    },\n    {\n        title: '경력직 채용, 그 태도에 관하여',\n        url: 'https://ppss.kr/archives/141428',\n        tags: ['Etc']\n    },\n    {\n        title: '어두운 추상화의 위기 (The Looming Abstraction Crisis) 번역글',\n        url: 'https://blog.pigno.se/post/183565621043/%EC%96%B4%EB%91%90%EC%9A%B4-%EC%B6%94%EC%83%81%ED%99%94%EC%9D%98-%EC%9C%84%EA%B8%B0-the-looming-abstraction-crisis-%EB%B2%88%EC%97%AD%EA%B8%80',\n        tags: ['Computer Science']\n    },\n    {\n        title: '쿠버네티스 pod 구성 패턴',\n        url: 'https://arisu1000.tistory.com/27863',\n        tags: ['Kubernetes']\n    },\n    {\n        title: '신규 Web 서비스시 고려해 볼 사항',\n        url: 'http://kwonnam.pe.kr/wiki/web/%EC%8B%A0%EA%B7%9C%EC%84%9C%EB%B9%84%EC%8A%A4',\n        tags: ['Architecture']\n    },\n    {\n        title: '바이트 순서와 BOM이 이렇게 복잡해진 이유',\n        url: 'http://www.allofsoftware.net/2015/06/bom-11.html',\n        tags: ['Computer Science']\n    },\n    {\n        title: 'Tumblr에서는 MySQL로 어떻게 대용량 데이터를 관리하였을까?',\n        url: 'http://gywn.net/2012/05/how_to_shard_big_data_in_tumblr/',\n        tags: ['Database', 'Sharding']\n    },\n    {\n        title: '어쩌다 DDD 공부를 시작했다',\n        url: 'https://millenial-dev.tistory.com/11',\n        tags: ['DDD']\n    },\n    {\n        title: 'Go API에서 메모리 누수 예방하기',\n        url: 'https://mingrammer.com/translation-avoiding-memory-leak-in-golang-api/',\n        tags: ['Go']\n    },\n    {\n        title: '유한 상태 기계를 Django에 적용하여 상태 변경을 관리하기',\n        url: 'https://tech.peoplefund.co.kr/2019/03/26/managing-state-using-finite-state-machine.html',\n        tags: ['Finite State Machine']\n    },\n    {\n        title: 'Go My Way #2 - 데이터베이스, 로깅',\n        url: 'https://jaehue.github.io/post/go-my-way-2-database-and-logging/',\n        tags: ['Go']\n    },\n    {\n        title: '리눅스의 페이지 캐시와 버퍼 캐시',\n        url: 'https://brunch.co.kr/@alden/25',\n        tags: ['Linux', 'Computer Science']\n    },\n    {\n        title: '확장하기 쉬운 코드가 아니라 삭제하기 쉬운 코드를 작성하자',\n        url: 'https://harfangk.github.io/2016/10/30/write-code-that-is-easy-to-delete-not-easy-to-extend-ko.html?fbclid=IwAR2QqMQtI8ZBXB56RmahovnGBgNY-SHiw0lMoRfhGxJDfpkClOe9W30iYAc',\n        tags: ['Clean Code']\n    },\n    {\n        title: '후배 개발자에게 - 2019년',\n        url: 'https://brunch.co.kr/@javajigi/4',\n        tags: ['Developer']\n    },\n    {\n        title: '능력 있는 개발자는 어떻게 알아볼 수 있나?',\n        url: 'https://okky.kr/article/370719',\n        tags: ['Developer']\n    },\n    {\n        title: 'Armeria 오픈소스화 이야기',\n        url: 'https://engineering.linecorp.com/ko/blog/open-sourcing-armeria/',\n        tags: ['Open Source']\n    },\n    {\n        title: 'Kubernetes Ingress 개념 및 사용 방법, 온-프레미스 환경에서 Ingress 구축하기',\n        url: 'https://blog.naver.com/alice_k106/221502890249',\n        tags: ['Kubernetes']\n    },\n    {\n        title: 'Kubernetes Ingress 의 ClusterIP Bypass, Annotation, SSL/TLS 를 위한 인증서 적용',\n        url: 'https://blog.naver.com/alice_k106/221503924911',\n        tags: ['Kubernetes']\n    },\n    {\n        title: 'Edge Computing 의 의미와 필요성',\n        url: 'https://blog.naver.com/alice_k106/221300292775',\n        tags: ['Edge Computing']\n    },\n    {\n        title: 'IBM의 Docker 파일 시스템 성능 논문 리뷰',\n        url: 'https://blog.naver.com/alice_k106/220973165893',\n        tags: ['Docker', 'Performance']\n    },\n    {\n        title: 'Docker Container 와 Performance Interference 이야기',\n        url: 'https://blog.naver.com/alice_k106/221088381471',\n        tags: ['Docker', 'Performance']\n    },\n    {\n        title: '쿠버네티스 모니터링 : metrics-server (kubernetes monitoring : metrics-server)',\n        url: 'https://arisu1000.tistory.com/27856',\n        tags: ['Kubernetes']\n    },\n    {\n        title: '쿠버네티스를 이용해 테스팅 환경 구현해보기',\n        url: 'http://woowabros.github.io/experience/2018/03/13/k8s-test.html',\n        tags: ['Kubernetes']\n    },\n    {\n        title: '쿠버네티스 인그레스(kubernetes ingress)',\n        url: 'https://arisu1000.tistory.com/27840',\n        tags: ['Kubernetes']\n    },\n    {\n        title: 'You Are Not Google',\n        url: 'https://blog.bradfieldcs.com/you-are-not-google-84912cf44afb',\n        tags: ['Etc']\n    },\n    {\n        title: 'Running VSCode in Docker',\n        url: 'https://binal.pub/2019/04/running-vscode-in-docker/',\n        tags: ['Docker', 'Etc']\n    },\n    {\n        title: '모니터링은 경보가 아니라 해석',\n        url: 'https://www.sauru.so/blog/monitoring-is-not-alert-but-analytics/',\n        tags: ['Monitoring']\n    },\n]\n","\n\nexport const stringToColor = (str: string): string => {\n    let hash = 0\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash)\n    }\n    let color = '#';\n    for (let i = 0; i < 3; i++) {\n        const value = (hash >> (i * 8)) & 0xFF\n        color += ('00' + value.toString(16)).substr(-2)\n    }\n    return color\n}\n\nconst hexToRgb = (hex: string): number[] => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n\n    return [\n        parseInt(result![1], 16),\n        parseInt(result![2], 16),\n        parseInt(result![3], 16),\n     ]\n  }\n\nexport const isDarkColor = (hexColor: string): boolean => {\n    const [ r, g, b ] = hexToRgb(hexColor)\n  \n    let colorArray = [r / 255, g / 255, b / 255].map(v => {\n        if (v <= 0.03928) {\n            return v / 12.92\n        }\n  \n        return Math.pow((v + 0.055) / 1.055, 2.4)\n    })\n  \n    const luminance = 0.2126 * colorArray[0] + 0.7152 * colorArray[1] + 0.0722 * colorArray[2]\n  \n    return luminance <= 0.479\n}\n","import React, { FC } from \"react\"\nimport styled from \"styled-components\"\nimport { stringToColor, isDarkColor } from \"../utils/color\"\n\n\ninterface StyledSpanProps {\n    color: string\n    bgColor: string\n}\n\nconst StyledSpan = styled.span`\n    background-color: ${(props: StyledSpanProps) => props.bgColor};\n    color: ${(props: StyledSpanProps) => props.color};\n    border-radius: 2px;\n    cursor: pointer;\n    font-size: 11px;\n    margin: 0 2px;\n    padding: 2px 6px;\n    max-height: 20px;\n    overflow-y: hidden;\n    white-space: nowrap;\n`\n\ninterface Props {\n    name: string\n    onClick?: () => void\n    closable?: boolean\n}\n\nconst TagBox: FC<Props> = ({ name, onClick, closable }) => {\n    const bgColor = stringToColor(name)\n    const color = isDarkColor(bgColor) ? '#eeeeee' : '#222222'\n\n    return (\n        <StyledSpan\n            color={color}\n            bgColor={bgColor}\n            onClick={() => { onClick!() }}\n        >\n            {name}\n            {closable === true ? ' ' + String.fromCharCode(215) : null}\n        </StyledSpan>\n    )\n}\n\nTagBox.defaultProps = {\n    onClick: () => {},\n    closable: false,\n}\n\nexport default TagBox\n","import React, { FC } from \"react\"\nimport styled from \"styled-components\"\n\n\nconst Wrapper = styled.div`\n  zoom: 1;\n  :before, :after {\n    content: \" \";\n    display: table;\n  }\n\n  :after {\n    clear: both;\n  }\n`\n\nconst Clearfix: FC = ({ children }) => (\n  <Wrapper>\n    {children}\n  </Wrapper>\n)\n\nexport default Clearfix\n","import React, { PureComponent } from \"react\"\nimport styled from \"styled-components\"\nimport ReactTinyLink from \"react-tiny-link\"\nimport { PageRendererProps, graphql, StaticQuery } from \"gatsby\"\nimport { Layout } from \"../components/layout\"\nimport { SEO } from \"../components/seo\"\nimport { Bio } from \"../components/bio\"\nimport Nav from \"../components/nav\"\nimport { postLinks, PostLink } from '../data/awesome-post-links'\nimport TagBox from \"../components/tag-box\"\nimport Clearfix from \"../components/clearfix\"\n\n\nconst Wrapper = styled.div`\n  display: block;\n  margin: 30px 0;\n`\n\nconst AllTagWrapper = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 20px 0;\n`\n\nconst SelectedTagsWrapper = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 20px 0;\n`\n\nconst TagLi = styled.li`\n  list-style: none;\n  float: left;\n  padding: 0;\n  margin: 0;\n`\n\ntype Props = PageRendererProps\n\ninterface State {\n  selectedTags: string[]\n}\n\nexport default class AwesomePosts extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      selectedTags: [],\n    }\n  }\n\n  onSelectTag(tag: string) {\n    const selectedTags = Object.assign([], this.state.selectedTags)\n    if (selectedTags.indexOf(tag) > -1) {\n      return\n    }\n    selectedTags.push(tag)\n    this.setState({ selectedTags })\n  }\n\n  onRemoveTag(tag: string) {\n    const selectedTags = Object.assign([], this.state.selectedTags)\n    if (selectedTags.indexOf(tag) === -1) {\n      return\n    }\n    selectedTags.splice(selectedTags.indexOf(tag), 1)\n    this.setState({ selectedTags })\n  }\n\n  renderAllTags() {\n    const tagElements = postLinks\n      // extract tags\n      .map(postLink => postLink.tags)\n      // flatten\n      .reduce((acc: string[], tags: string[], index, arr) => {\n        acc = acc.concat(tags)\n        return acc\n      }, [])\n      // remove duplicate\n      .filter((tag, pos, self) => self.indexOf(tag) == pos)\n      // filter selected tags\n      .filter((tag) => this.state.selectedTags.indexOf(tag) === -1)\n      // render\n      .map((tag, i) => \n        <TagLi key={tag}>\n          <TagBox name={tag} onClick={() => this.onSelectTag(tag)} />\n        </TagLi>\n      )\n    \n    return (\n      <Clearfix>\n        <AllTagWrapper>\n          {tagElements}\n        </AllTagWrapper>\n      </Clearfix>\n    )\n  }\n\n  renderSelectedTags() {\n    const { selectedTags } = this.state\n    if (selectedTags.length === 0) {\n      return null\n    }\n    \n    return (\n      <Clearfix>\n        <SelectedTagsWrapper>\n          {selectedTags.map((tag, i) => (\n            <TagLi key={tag}>\n              <TagBox\n                name={tag}\n                onClick={() => this.onRemoveTag(tag)}\n                closable={true}\n              />\n            </TagLi>\n          ))}\n        </SelectedTagsWrapper>\n      </Clearfix>\n    )\n  }\n\n  renderPostLinks() {\n    const { selectedTags } = this.state\n\n    return Object.assign(new Array<PostLink>(), postLinks)\n      .reverse()\n      .filter((postLink) => \n        selectedTags.length === 0 ? \n          true : \n          postLink.tags.filter(tag => selectedTags.indexOf(tag) > -1).length > 0\n      )\n      .map(({ title, url, tags }) => (\n        <Wrapper key={url}>\n          <div>\n            <a href={url} target=\"_blank\">{title}</a>\n            <ReactTinyLink url={url} />\n          </div>\n          <div>\n            {tags.map((tag, i) => (\n              <TagBox\n                key={url + tag}\n                name={tag}\n                onClick={() => this.onSelectTag(tag)}\n              />\n            ))}\n          </div>\n        </Wrapper>\n      ))\n  }\n\n  renderWithData(data: any) {\n    return (\n      <Layout location={this.props.location} title={data.site.siteMetadata.title}>\n        <SEO\n          title=\"awesome posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <Bio />\n        <Nav />\n        {this.renderAllTags()}\n        {this.renderSelectedTags()}\n        {this.renderPostLinks()}   \n      </Layout>\n    )\n  }\n\n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n          query {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={(data) => this.renderWithData(data)}\n      />\n    )\n  }\n}\n","import { CSSObject } from \"styled-components\"\nimport Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\nimport Github from \"typography-theme-github\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\n// const typography = new Typography(Wordpress2016)\nconst typography = new Typography(Github)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n\ntype StyledScale = (values: number) => CSSObject\nexport const styledScale = scale as StyledScale\n","import { Link } from \"gatsby\"\n// tslint:disable-next-line:no-submodule-imports\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\nimport * as React from \"react\"\nimport { ComponentProps } from \"react\"\n\nconst FADE_TIME = 0.5\n\ntype Props = Partial<ComponentProps<typeof Link>>\n\nexport const FadeLink = (props: Props) => {\n  const { children, ...linkProps } = props\n\n  return (\n    <AniLink fade={true} duration={FADE_TIME} {...linkProps}>\n      {children}\n    </AniLink>\n  )\n}\n","import { PageRendererProps } from \"gatsby\"\nimport React, { ReactNode } from \"react\"\nimport styled from \"styled-components\"\nimport { rhythm, styledScale } from \"../utils/typography\"\nimport { FadeLink } from \"./link\"\n\ninterface Props extends PageRendererProps {\n  title: string\n  children: ReactNode\n}\n\nconst StyledH1 = styled.h1`\n  ${styledScale(1.5)};\n  margin-bottom: ${rhythm(1.5)};\n  margin-top: 0;\n`\n\nconst StyledH3 = styled.h3`\n  font-family: Montserrat, sans-serif;\n  margin-top: 0;\n`\n\nconst StyledLink = styled(FadeLink)`\n  box-shadow: none;\n  color: inherit;\n  text-decoration: none;\n`\n\nconst Content = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: ${rhythm(24)};\n  padding: ${`${rhythm(1.5)} ${rhythm(3 / 4)}`};\n`\n\nexport const Layout = (props: Props) => {\n  const { location, title, children } = props\n  const mainPaths = [\n    '/',\n    '/diary',\n    '/awesome-posts',\n  ]\n\n  const HeaderTitle = mainPaths.indexOf(location.pathname) > -1 ? StyledH1 : StyledH3\n\n  return (\n    <Content>\n      <header>\n        <HeaderTitle>\n          <StyledLink to={`/`}>{title}</StyledLink>\n        </HeaderTitle>\n      </header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n    </Content>\n  )\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport Helmet from \"react-helmet\"\n\ninterface Meta {\n  name: string\n  content: string\n}\n\ninterface Props {\n  title: string\n  lang?: string\n  meta?: Meta[]\n  keywords?: string[]\n  description?: string\n}\n\nexport const SEO = (props: Props) => {\n  const lang = props.lang || \"en\"\n  const meta = props.meta || []\n  const keywords = props.keywords || []\n  const description = props.description || \"\"\n\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={props.title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          content: metaDescription,\n          name: `description`,\n        },\n        {\n          content: props.title,\n          property: `og:title`,\n        },\n        {\n          content: metaDescription,\n          property: `og:description`,\n        },\n        {\n          content: `website`,\n          property: `og:type`,\n        },\n        {\n          content: `summary`,\n          name: `twitter:card`,\n        },\n        {\n          content: site.siteMetadata.author,\n          name: `twitter:creator`,\n        },\n        {\n          content: props.title,\n          name: `twitter:title`,\n        },\n        {\n          content: metaDescription,\n          name: `twitter:description`,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                content: keywords.join(`, `),\n                name: `keywords`,\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport React, { ComponentProps, forwardRef, Ref } from \"react\"\nimport styled from \"styled-components\"\nimport { rhythm } from \"../utils/typography\"\n\nconst Content = styled.div`\n  display: flex;\n  margin-bottom: ${rhythm(1 / 4)};\n`\n\nconst GatsbyImage = forwardRef(\n  (props: ComponentProps<typeof Image>, ref: Ref<Image>) => (\n    <Image {...props} ref={ref} />\n  )\n)\n\nconst Avatar = styled(GatsbyImage)`\n  border-radius: 100%;\n  margin-bottom: 0;\n  margin-right: ${rhythm(1 / 2)};\n  min-width: 50px;\n`\n\nexport const Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Content>\n      <Avatar\n        fixed={data.avatar.childImageSharp.fixed}\n        alt=\"Jaeyo\"\n        imgStyle={{ borderRadius: \"50%\" }}\n      />\n      <p>\n        Loves writing, music, and developing.<br />\n        You can find me on \n        {` `}<a href=\"https://github.com/Jaeyo\">Github</a>,\n        {` `}<a href=\"https://twitter.com/lastiverse\">Twitter</a>,\n        {` `}<a href=\"https://www.facebook.com/jaeyo.developer\">Facebook</a>\n      </p>\n    </Content>\n  )\n}\n","import React from \"react\"\nimport { FadeLink } from \"./link\"\nimport styled from \"styled-components\"\nimport { rhythm } from \"../utils/typography\"\n\n\nconst Content = styled.div`\n    text-align: center;\n    margin: ${rhythm(2)} 0 ${rhythm(1)} 0;\n`\n\nconst NavLink = styled(FadeLink)`\n    font-size: 14px;\n    border-bottom: 1px dashed #4078c0;\n    margin: 0 10px;\n    text-decoration: none;\n    :hover {\n        text-decoration: none;\n    }\n`\n\nconst Nav = () => (\n    <Content>\n        <NavLink to=\"/\">home</NavLink>\n        <NavLink to=\"/diary\">diary</NavLink>\n        <NavLink to=\"/awesome-posts\">awesome-posts</NavLink>\n    </Content>\n)\n\nexport default Nav\n"],"sourceRoot":""}