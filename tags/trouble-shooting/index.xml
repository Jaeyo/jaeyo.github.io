<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>trouble shooting on Hello, There</title>
    <link>http://jaeyo.github.io/tags/trouble-shooting/</link>
    <description>Recent content in trouble shooting on Hello, There</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Fri, 05 Feb 2021 07:00:00 +0000</lastBuildDate><atom:link href="http://jaeyo.github.io/tags/trouble-shooting/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL 이 데이터를 안준다</title>
      <link>http://jaeyo.github.io/mysql-convert-tz-timezone/</link>
      <pubDate>Fri, 05 Feb 2021 07:00:00 +0000</pubDate>
      
      <guid>http://jaeyo.github.io/mysql-convert-tz-timezone/</guid>
      <description>팀원 중 한분으로부터 헬프 요청이 왔다. 수정 중인 코드에서 버그가 생겼는데 원인을 도무지 모르겠다는 것이었다.
상황을 대충 들어보니 아래와 같았다.
특정 쿼리가 주기적으로 실행되면서 데이터를 가져온다. 그리고 로그에는 몇 건의 데이터를 가져왔는지를 찍고 있는데, 계속해서 쿼리 결과로 가져오는 데이터가 0건이라는 것이다.
헌데 이상한 것은, 해당 쿼리를 데이터베이스 툴을 통해 직접 때려보면 2건의 데이터가 조회된다.
즉, 똑같은 쿼리를 서버의 런타임에서 날리면 0건, 데이터베이스 툴에서 직접 날리는 2건이 나오는 상황인 것이다.
처음 의심한 포인트는 쿼리가 잘못 구성되었고, 그로 인해 ORM 을 통한 object 바인딩에 실패한 것이지 않을까 하는 부분 이었다.</description>
    </item>
    
    <item>
      <title>오늘의 삽질 - 괜히 Bash 만 의심했다.</title>
      <link>http://jaeyo.github.io/bash-is-not-async/</link>
      <pubDate>Tue, 13 Aug 2019 01:00:00 +0000</pubDate>
      
      <guid>http://jaeyo.github.io/bash-is-not-async/</guid>
      <description>회사에서 만들어놓은 쉘 스크립트가 있었다. 필요한 패키지를 다운로드받아 설치하고 설정파일을 고치고 systemctl 로 띄우는 내용의 스크립트로 대략적인 모양새는 아래와 같다.
install_blabla() { 	dest=$(mktemp /tmp/blabla_XXXX.deb) 	curl -fsSL http://blabla.com/blabla.deb -o $dest 	dpkg -i $dest 	rm -f $dest }  install_conf() { 	curl -fsSL http://blabla.com/blabla.conf -o /etc/blabla/blabla.conf 	sed -i -e &amp;#34;...&amp;#34; /etc/blabla/blabla.conf }  start_blabla() { 	systemctl start blabla }  do_install() { 	install_blabla 	install_conf 	start_blabla }  do_install 위의 스크립트에 따르면 아래의 로직을 타게 된다.</description>
    </item>
    
    <item>
      <title>Too many open files</title>
      <link>http://jaeyo.github.io/too-many-open-files/</link>
      <pubDate>Tue, 25 Apr 2017 19:25:01 +0000</pubDate>
      
      <guid>http://jaeyo.github.io/too-many-open-files/</guid>
      <description>집에서 기타치면서 놀고 있었는데 외출했던 아내가 귀가중이라는 메시지를 받았다. 집 앞 지하척 역으로 마중나가려고 핸드폰을 챙겨서 나가려는데 슬랙 메시지가 뭐가 많이 와있다. 평소 팀에서 커뮤니케이션을 슬랙으로 하기 때문에 별 생각없이 슬랙 메시지들을 확인해보고 있는데 서버쪽에 장애가 날 때 메시지가 오는 채널에 몇개의 메시지가 와있다. 순간 심장이 덜컹하며 확인해보니 몇가지 종류의 에러메시지가 꽤 여러번 발생한 형태다.
첫번째 에러는 too many open files 두번째 에러는 unable to find server blabla
두번째 에러로그는 심지어 디비서버를 못찾는다는 에러메시지!</description>
    </item>
    
    <item>
      <title>아닌 밤중에 리퀘스트가 튄다?</title>
      <link>http://jaeyo.github.io/weird-requests/</link>
      <pubDate>Tue, 25 Apr 2017 12:00:01 +0000</pubDate>
      
      <guid>http://jaeyo.github.io/weird-requests/</guid>
      <description>신규 서비스를 오픈하면서 서버 모니터링을 위해 aws cloudwatch를 사용하게 되었다. 원래는 cloudwatch와 newrelic 을 모두 선택지에 올려놓고 마지막까지 고민을 했다. newrelic 쪽이 기능도 많고 레퍼런스도 확실했지만 일부 서버에서 agent의 설치가 안되는 문제가 있었다. 사실 agent 설치 안되는 문제야 조금 더 시간을 들여서 파보면 해결할 수 있는 문제였겠지만 당장에 서비스 오픈을 코앞에 둔 상황에서 시간적인 여유가 부족했고, cloudwatch도 우리가 필요한 기능을 대부분 제공하고 있었기 때문에 cloudwatch로 가기로 했다.
cpu, 메모리, 디스크 사용량 등의 지표를 대시보드로 구성해놓고 며칠 모니터링하고 있으려니까 좀 이상한 현상이 눈에 띄었다.</description>
    </item>
    
  </channel>
</rss>
