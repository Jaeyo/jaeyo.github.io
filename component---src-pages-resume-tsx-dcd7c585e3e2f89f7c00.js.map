{"version":3,"sources":["webpack:///./src/components/resume/tech-history-gantt-chart.tsx","webpack:///./src/pages/resume.tsx","webpack:///./src/utils/typography.ts","webpack:///./src/components/link.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/components/bio.tsx","webpack:///./src/components/nav.tsx"],"names":["styled","div","withConfig","displayName","componentId","h3","props","width","bgColor","Resume","_1019946411","data","site","siteMetadata","title","__webpack_require__","d","__webpack_exports__","rhythm","styledScale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","typography_theme_github__WEBPACK_IMPORTED_MODULE_2__","typography_theme_github__WEBPACK_IMPORTED_MODULE_2___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","Github","scale","FadeLink","children","linkProps","_objectWithoutPropertiesLoose","react__WEBPACK_IMPORTED_MODULE_6__","gatsby_plugin_transition_link_AniLink__WEBPACK_IMPORTED_MODULE_5___default","a","Object","assign","fade","duration","Layout","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","styled_components__WEBPACK_IMPORTED_MODULE_1__","_utils_typography__WEBPACK_IMPORTED_MODULE_2__","_link__WEBPACK_IMPORTED_MODULE_3__","StyledH1","h1","StyledH3","StyledLink","Content","location","HeaderTitle","indexOf","pathname","createElement","to","Date","getFullYear","href","SEO","lang","meta","keywords","description","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","name","property","author","concat","length","join","GatsbyImage","forwardRef","ref","react__WEBPACK_IMPORTED_MODULE_4___default","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","Avatar","Bio","_public_static_d_4195216099_json__WEBPACK_IMPORTED_MODULE_2__","fixed","avatar","childImageSharp","alt","imgStyle","borderRadius","_link__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","_utils_typography__WEBPACK_IMPORTED_MODULE_3__","NavLink","Nav"],"mappings":"yLAgBgBA,IAAOC,IAAVC,WAAA,CAAAC,YAAA,oCAAAC,YAAA,gBAAGJ,CAAH,oCAKCA,IAAOK,GAAVH,WAAA,CAAAC,YAAA,kCAAAC,YAAA,gBAAGJ,CAAH,uBAIeA,IAAOC,IAAVC,WAAA,CAAAC,YAAA,8CAAAC,YAAA,gBAAGJ,CAAH,0CAQCA,IAAOC,IAAVC,WAAA,CAAAC,YAAA,4CAAAC,YAAA,gBAAGJ,CAAH,+BACV,SAACM,GAAD,OAAiCA,EAAMC,QAW/BP,IAAOC,IAAVC,WAAA,CAAAC,YAAA,uCAAAC,YAAA,gBAAGJ,CAAH,kGAaFA,IAAOC,IAAVC,WAAA,CAAAC,YAAA,kCAAAC,YAAA,gBAAGJ,CAAH,sEACA,SAACM,GAAD,OAAuBA,EAAMC,OAClB,SAACD,GAAD,OAAuBA,EAAME,UCTpCC,UAtCA,SAACH,GACDI,EAAAC,KAUUC,KAAKC,aAAaC,MAGvC,OAAO,wCC1BXC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAAO,EAAAG,GAIAE,IAAcC,oBAAsB,WAClC,MAAO,CACLC,2BAA4B,CAC1BC,UAAS,iBAKRH,IAAcI,YAGrB,IAAMC,EAAa,IAAIC,IAAWC,KAOnBF,IACFd,EAASc,EAAWd,OAIpBC,EAHQa,EAAWG,kICnBhC,IAIaC,EAAW,SAAC9B,GAAiB,IAChC+B,EAA2B/B,EAA3B+B,SAAaC,sIADmBC,CACLjC,EADK,cAGxC,OACEkC,EAAA,cAACC,EAAAC,EAADC,OAAAC,OAAA,CAASC,MAAM,EAAMC,SARP,IAQgCR,GAC3CD,sCCdPtB,EAAAC,EAAAC,EAAA,sBAAA8B,IAAA,IAAAC,EAAAjC,EAAA,GAAAkC,EAAAlC,EAAAO,EAAA0B,GAAAE,EAAAnC,EAAA,KAAAoC,EAAApC,EAAA,KAAAqC,EAAArC,EAAA,KAUMsC,EAAWrD,IAAOsD,GAAVpD,WAAA,CAAAC,YAAA,mBAAAC,YAAA,YAAGJ,CAAH,wCACVmB,YAAY,KACGD,YAAO,MAIpBqC,EAAWvD,IAAOK,GAAVH,WAAA,CAAAC,YAAA,mBAAAC,YAAA,YAAGJ,CAAH,qDAKRwD,EAAaxD,YAAOoC,KAAVlC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,YAAGJ,CAAH,yDAMVyD,EAAUzD,IAAOC,IAAVC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGJ,CAAH,kEAGEkB,YAAO,IACNA,YAAO,KAJV,IAIkBA,YAAO,MAGzB6B,EAAS,SAACzC,GAAiB,IAC9BoD,EAA8BpD,EAA9BoD,SAAU5C,EAAoBR,EAApBQ,MAAOuB,EAAa/B,EAAb+B,SAOnBsB,EANY,CAChB,IACA,SACA,kBAG4BC,QAAQF,EAASG,WAAa,EAAIR,EAAWE,EAE3E,OACEN,EAAAP,EAAAoB,cAACL,EAAD,KACER,EAAAP,EAAAoB,cAAA,cACEb,EAAAP,EAAAoB,cAACH,EAAD,KACEV,EAAAP,EAAAoB,cAACN,EAAD,CAAYO,GAAE,KAAQjD,KAG1BmC,EAAAP,EAAAoB,cAAA,YAAOzB,GACPY,EAAAP,EAAAoB,cAAA,oBACK,IAAIE,MAAOC,cADhB,mBAGEhB,EAAAP,EAAAoB,cAAA,KAAGI,KAAK,4BAAR,8HChCKC,EAAM,SAAC7D,GAClB,IAAM8D,EAAO9D,EAAM8D,MAAQ,KACrBC,EAAO/D,EAAM+D,MAAQ,GACrBC,EAAWhE,EAAMgE,UAAY,GAC7BC,EAAcjE,EAAMiE,aAAe,GAEjC3D,EAN2B4D,EAAA7D,KAM3BC,KAcF6D,EAAkBF,GAAe3D,EAAKC,aAAa0D,YAEzD,OACEG,EAAAhC,EAAAoB,cAACa,EAAAjC,EAAD,CACEkC,eAAgB,CACdR,QAEFtD,MAAOR,EAAMQ,MACb+D,cAAa,QAAUjE,EAAKC,aAAaC,MACzCuD,KAAM,CACJ,CACES,QAASL,EACTM,KAAI,eAEN,CACED,QAASxE,EAAMQ,MACfkE,SAAQ,YAEV,CACEF,QAASL,EACTO,SAAQ,kBAEV,CACEF,QAAO,UACPE,SAAQ,WAEV,CACEF,QAAO,UACPC,KAAI,gBAEN,CACED,QAASlE,EAAKC,aAAaoE,OAC3BF,KAAI,mBAEN,CACED,QAASxE,EAAMQ,MACfiE,KAAI,iBAEN,CACED,QAASL,EACTM,KAAI,wBAGLG,OACCZ,EAASa,OAAS,EACd,CACEL,QAASR,EAASc,KAAT,MACTL,KAAI,YAEN,IAELG,OAAOb,mTCzFVZ,EAAUzD,IAAOC,IAAVC,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGJ,CAAH,oCAEMkB,YAAO,MAGpBmE,EAAcC,qBAClB,SAAChF,EAAqCiF,GAAtC,OACEC,EAAA9C,EAAAoB,cAAC2B,EAAA/C,EAADC,OAAAC,OAAA,GAAWtC,EAAX,CAAkBiF,IAAKA,OAIrBG,EAAS1F,YAAOqF,GAAVnF,WAAA,CAAAC,YAAA,cAAAC,YAAA,gBAAGJ,CAAH,wEAGMkB,YAAO,KAIZyE,EAAM,WACjB,IAAMhF,EAAOiF,EAAAjF,KAYb,OACE6E,EAAA9C,EAAAoB,cAACL,EAAD,KACE+B,EAAA9C,EAAAoB,cAAC4B,EAAD,CACEG,MAAOlF,EAAKmF,OAAOC,gBAAgBF,MACnCG,IAAI,QACJC,SAAU,CAAEC,aAAc,SAE5BV,EAAA9C,EAAAoB,cAAA,iDACuC0B,EAAA9C,EAAAoB,cAAA,WADvC,yBAGO0B,EAAA9C,EAAAoB,cAAA,KAAGI,KAAK,4BAAR,UAHP,QAIOsB,EAAA9C,EAAAoB,cAAA,KAAGI,KAAK,kCAAR,WAJP,QAKOsB,EAAA9C,EAAAoB,cAAA,KAAGI,KAAK,4CAAR,0xCCjDb,IAAAlB,EAAAjC,EAAA,GAAAkC,EAAAlC,EAAAO,EAAA0B,GAAAmD,EAAApF,EAAA,KAAAqF,EAAArF,EAAA,KAAAsF,EAAAtF,EAAA,KAMM0C,EAAUzD,IAAOC,IAAVC,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGJ,CAAH,0CAECkB,YAAO,GAAQA,YAAO,IAG9BoF,EAAUtG,YAAOoC,KAAVlC,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGJ,CAAH,sHAkBEuG,IARH,kBACRtD,EAAAP,EAAAoB,cAACL,EAAD,KACIR,EAAAP,EAAAoB,cAACwC,EAAD,CAASvC,GAAG,KAAZ,QACAd,EAAAP,EAAAoB,cAACwC,EAAD,CAASvC,GAAG,UAAZ,SACAd,EAAAP,EAAAoB,cAACwC,EAAD,CAASvC,GAAG,kBAAZ","file":"component---src-pages-resume-tsx-dcd7c585e3e2f89f7c00.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { range, lighten } from \"../../utils/utils\"\n\n\n/*\nperiod:\n    2013: 0 - 3\n    2014: 4 - 7\n    2015: 8 - 11\n    2016: 12 - 15\n    2017: 16 - 19\n    2018: 20 - 23\n    2019: 24 - 27\n*/\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin-bottom: 60px;\n`\n\nconst Title = styled.h3`\n  text-align: right;\n`\n\nconst DateHeaderWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: 17px;\n`\n\ninterface DateHeaderFieldProps { width: number }\n\nconst DateHeaderField = styled.div`\n  width: ${(props: DateHeaderFieldProps) => props.width}%;\n  font-size: 12px;\n`\n\nconst DateHeader = () => (\n  <DateHeaderWrapper>\n    <DateHeaderField width={17} />\n    { range(13, 19 + 1).map(year => <DateHeaderField key={year} width={(100-17) / 7}>{'`' + year}</DateHeaderField>) }\n  </DateHeaderWrapper>\n)\n\nconst RowWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: 20px;\n  border-bottom: 1px dashed rgb(202, 202, 202);\n  padding: 2px 0;\n`\n\ninterface FieldProps {\n  width: number\n  bgColor: string\n}\n\nconst Field = styled.div`\n  width: ${(props: FieldProps) => props.width}%;\n  background-color: ${(props: FieldProps) => props.bgColor};\n  font-size: 11px;\n  border-radius: 7px;\n`\n\nconst Companies = () => (\n  <Wrapper>\n    <Title>Company</Title>\n    <DateHeader />\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">Igloosec</Field>\n      <Field width={((100-17) / 28) * 15} bgColor={lighten('3958d8', 1)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">RIDI</Field>\n      <Field width={((100-17) / 28) * 15} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 8} bgColor={lighten('3958d8', 20)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">SK C&C</Field>\n      <Field width={((100-17) / 28) * 23} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 5} bgColor={lighten('3958d8', 35)} />\n    </RowWrapper>\n  </Wrapper>\n)\n\nconst Language = () => (\n  <Wrapper>\n    <Title>Language</Title>\n    <DateHeader />\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">Java</Field>\n      <Field width={((100-17) / 28) * 15} bgColor={lighten('29b0c3', -20)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">Javascript</Field>\n      <Field width={((100-17) / 28) * 28} bgColor={lighten('29b0c3', -5)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">Scala</Field>\n      <Field width={((100-17) / 28) * 8} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 3} bgColor={lighten('29b0c3', 5)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">Go</Field>\n      <Field width={((100-17) / 28) * 12} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 3} bgColor={lighten('29b0c3', 10)} />\n      <Field width={((100-17) / 28) * 8} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 5} bgColor={lighten('29b0c3', 10)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">Python</Field>\n      <Field width={((100-17) / 28) * 15} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 8} bgColor={lighten('29b0c3', 15)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">Kotlin</Field>\n      <Field width={((100-17) / 28) * 19} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 1} bgColor={lighten('29b0c3', 20)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">Typescript</Field>\n      <Field width={((100-17) / 28) * 25} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 3} bgColor={lighten('29b0c3', 23)} />\n    </RowWrapper>\n  </Wrapper>\n)\n\nconst FrameworkAndEtc = () => (\n  <Wrapper>\n    <Title>Framework & Etc</Title>\n    <DateHeader />\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">Oracle</Field>\n      <Field width={((100-17) / 28) * 15} bgColor={lighten('3fa211', -20)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">Jetty</Field>\n      <Field width={((100-17) / 28) * 11} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 4} bgColor={lighten('3fa211', -10)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">MySQL</Field>\n      <Field width={((100-17) / 28) * 15} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 13} bgColor={lighten('3fa211', -3)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">Django</Field>\n      <Field width={((100-17) / 28) * 15} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 8} bgColor={lighten('3fa211', 3)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">React.js</Field>\n      <Field width={((100-17) / 28) * 13} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 15} bgColor={lighten('3fa211', 8)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">AWS</Field>\n      <Field width={((100-17) / 28) * 15} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 8} bgColor={lighten('3fa211', 12)} />\n      <Field width={((100-17) / 28) * 1} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 4} bgColor={lighten('3fa211', 12)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">Redis</Field>\n      <Field width={((100-17) / 28) * 15} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 8} bgColor={lighten('3fa211', 18)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">Spring</Field>\n      <Field width={((100-17) / 28) * 19} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 1} bgColor={lighten('3fa211', 22)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">Kafka</Field>\n      <Field width={((100-17) / 28) * 23} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 5} bgColor={lighten('3fa211', 24)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">InfluxDB</Field>\n      <Field width={((100-17) / 28) * 23} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 5} bgColor={lighten('3fa211', 28)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">IBMCloud</Field>\n      <Field width={((100-17) / 28) * 23} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 5} bgColor={lighten('3fa211', 32)} />\n    </RowWrapper>\n    <RowWrapper>\n      <Field width={17} bgColor=\"none\">Koa</Field>\n      <Field width={((100-17) / 28) * 23} bgColor=\"none\" />\n      <Field width={((100-17) / 28) * 5} bgColor={lighten('3fa211', 36)} />\n    </RowWrapper>\n  </Wrapper>\n)\n\n\nconst TechHistoryGanttChart = () => {\n  return (\n    <>\n      <Companies />\n      <Language />\n      <FrameworkAndEtc />\n    </>\n  )\n}\n\nexport default TechHistoryGanttChart\n","import React from \"react\"\nimport { PageRendererProps, graphql, useStaticQuery } from \"gatsby\"\nimport marked from \"marked\"\nimport { Layout } from \"../components/layout\"\nimport { SEO } from \"../components/seo\"\nimport { Bio } from \"../components/bio\"\nimport Nav from \"../components/nav\"\nimport { intro, madeItBetter1, madeItBetter2 } from \"../data/resume\"\nimport TechHistoryGanttChart from \"../components/resume/tech-history-gantt-chart\"\n\n\ntype Props = PageRendererProps\n\nconst Resume = (props: Props) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  const siteTitle = data.site.siteMetadata.title\n\n  if (true) {\n    return null\n  }\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO\n        title=\"resume\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n      <Bio />\n      <Nav />\n      <h2>Introduction & Background</h2>\n      <p dangerouslySetInnerHTML={{ __html: marked(intro) }} />\n      <h2>made it better</h2>\n      <h3>#1</h3>\n      <p dangerouslySetInnerHTML={{ __html: marked(madeItBetter1) }} />\n      <h3>#2</h3>\n      <p dangerouslySetInnerHTML={{ __html: marked(madeItBetter2) }} />\n      <h2>okay for new things</h2>\n      <TechHistoryGanttChart />\n    </Layout>\n  )\n}\n\nexport default Resume\n","import { CSSObject } from \"styled-components\"\nimport Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\nimport Github from \"typography-theme-github\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\n// const typography = new Typography(Wordpress2016)\nconst typography = new Typography(Github)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n\ntype StyledScale = (values: number) => CSSObject\nexport const styledScale = scale as StyledScale\n","import { Link } from \"gatsby\"\n// tslint:disable-next-line:no-submodule-imports\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\nimport * as React from \"react\"\nimport { ComponentProps } from \"react\"\n\nconst FADE_TIME = 0.5\n\ntype Props = Partial<ComponentProps<typeof Link>>\n\nexport const FadeLink = (props: Props) => {\n  const { children, ...linkProps } = props\n\n  return (\n    <AniLink fade={true} duration={FADE_TIME} {...linkProps}>\n      {children}\n    </AniLink>\n  )\n}\n","import { PageRendererProps } from \"gatsby\"\nimport React, { ReactNode } from \"react\"\nimport styled from \"styled-components\"\nimport { rhythm, styledScale } from \"../utils/typography\"\nimport { FadeLink } from \"./link\"\n\ninterface Props extends PageRendererProps {\n  title: string\n  children: ReactNode\n}\n\nconst StyledH1 = styled.h1`\n  ${styledScale(1.5)};\n  margin-bottom: ${rhythm(1.5)};\n  margin-top: 0;\n`\n\nconst StyledH3 = styled.h3`\n  font-family: Montserrat, sans-serif;\n  margin-top: 0;\n`\n\nconst StyledLink = styled(FadeLink)`\n  box-shadow: none;\n  color: inherit;\n  text-decoration: none;\n`\n\nconst Content = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: ${rhythm(24)};\n  padding: ${`${rhythm(1.5)} ${rhythm(3 / 4)}`};\n`\n\nexport const Layout = (props: Props) => {\n  const { location, title, children } = props\n  const mainPaths = [\n    '/',\n    '/diary',\n    '/awesome-posts',\n  ]\n\n  const HeaderTitle = mainPaths.indexOf(location.pathname) > -1 ? StyledH1 : StyledH3\n\n  return (\n    <Content>\n      <header>\n        <HeaderTitle>\n          <StyledLink to={`/`}>{title}</StyledLink>\n        </HeaderTitle>\n      </header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n    </Content>\n  )\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport Helmet from \"react-helmet\"\n\ninterface Meta {\n  name: string\n  content: string\n}\n\ninterface Props {\n  title: string\n  lang?: string\n  meta?: Meta[]\n  keywords?: string[]\n  description?: string\n}\n\nexport const SEO = (props: Props) => {\n  const lang = props.lang || \"en\"\n  const meta = props.meta || []\n  const keywords = props.keywords || []\n  const description = props.description || \"\"\n\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={props.title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          content: metaDescription,\n          name: `description`,\n        },\n        {\n          content: props.title,\n          property: `og:title`,\n        },\n        {\n          content: metaDescription,\n          property: `og:description`,\n        },\n        {\n          content: `website`,\n          property: `og:type`,\n        },\n        {\n          content: `summary`,\n          name: `twitter:card`,\n        },\n        {\n          content: site.siteMetadata.author,\n          name: `twitter:creator`,\n        },\n        {\n          content: props.title,\n          name: `twitter:title`,\n        },\n        {\n          content: metaDescription,\n          name: `twitter:description`,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                content: keywords.join(`, `),\n                name: `keywords`,\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport React, { ComponentProps, forwardRef, Ref } from \"react\"\nimport styled from \"styled-components\"\nimport { rhythm } from \"../utils/typography\"\n\nconst Content = styled.div`\n  display: flex;\n  margin-bottom: ${rhythm(1 / 4)};\n`\n\nconst GatsbyImage = forwardRef(\n  (props: ComponentProps<typeof Image>, ref: Ref<Image>) => (\n    <Image {...props} ref={ref} />\n  )\n)\n\nconst Avatar = styled(GatsbyImage)`\n  border-radius: 100%;\n  margin-bottom: 0;\n  margin-right: ${rhythm(1 / 2)};\n  min-width: 50px;\n`\n\nexport const Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Content>\n      <Avatar\n        fixed={data.avatar.childImageSharp.fixed}\n        alt=\"Jaeyo\"\n        imgStyle={{ borderRadius: \"50%\" }}\n      />\n      <p>\n        Loves writing, music, and developing.<br />\n        You can find me on \n        {` `}<a href=\"https://github.com/Jaeyo\">Github</a>,\n        {` `}<a href=\"https://twitter.com/lastiverse\">Twitter</a>,\n        {` `}<a href=\"https://www.facebook.com/jaeyo.developer\">Facebook</a>\n      </p>\n    </Content>\n  )\n}\n","import React from \"react\"\nimport { FadeLink } from \"./link\"\nimport styled from \"styled-components\"\nimport { rhythm } from \"../utils/typography\"\n\n\nconst Content = styled.div`\n    text-align: center;\n    margin: ${rhythm(2)} 0 ${rhythm(1)} 0;\n`\n\nconst NavLink = styled(FadeLink)`\n    font-size: 14px;\n    border-bottom: 1px dashed #4078c0;\n    margin: 0 10px;\n    text-decoration: none;\n    :hover {\n        text-decoration: none;\n    }\n`\n\nconst Nav = () => (\n    <Content>\n        <NavLink to=\"/\">home</NavLink>\n        <NavLink to=\"/diary\">diary</NavLink>\n        <NavLink to=\"/awesome-posts\">awesome-posts</NavLink>\n    </Content>\n)\n\nexport default Nav\n"],"sourceRoot":""}