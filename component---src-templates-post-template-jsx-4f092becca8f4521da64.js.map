{"version":3,"sources":["webpack:///./src/components/Disqus/Disqus.jsx","webpack:///./src/components/PostTemplateDetails/index.jsx","webpack:///./src/templates/post-template.jsx","webpack:///./src/styles/variables.js","webpack:///./src/components/Layout/index.jsx","webpack:///./node_modules/react-disqus-comments/build/main.js","webpack:///./node_modules/react-disqus-comments/build/components/DisqusThread.js"],"names":["Disqus","props","_this","_Component","call","this","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","render","_this$props","postNode","siteMetadata","disqusShortname","post","frontmatter","url","fields","slug","react_default","a","createElement","main_default","shortname","identifier","title","category_id","onNewComment","Component","PostTemplateDetails","_this$props$data$site","data","site","subtitle","author","markdownRemark","tags","tagSlugs","homeBlock","PostHomeButton","to","tagsBlock","PostTags","PostTagsList","map","tag","i","PostTagsListItem","key","PostTagsListItemLink","commentsBlock","components_Disqus_Disqus","PostWrapper","PostInner","PostTitle","PostBody","dangerouslySetInnerHTML","__html","html","PostDate","moment","date","format","PostFooter","PostFooterText","href","github","target","rel","name","styled","div","_templateObject","_templateObject2","layoutPostSingleMaxWidth","layoutBreakpointMd","h1","_templateObject3","typographicBaseFontSize","layoutPostSingleWidth","typographicLeading","_templateObject4","colorSecondary","layoutBreakpointSm","_templateObject5","p","_templateObject6","_templateObject7","_templateObject8","ul","_templateObject9","li","_templateObject10","Link","_templateObject11","colorGrayBg","lighten","colorBase","typographicBaseLineHeight","darken","_templateObject12","PostTemplate","_post$frontmatter","postTitle","postDescription","description","Layout","Helmet_default","content","PostTemplateDetails_PostTemplateDetails","pageQuery","__webpack_require__","d","__webpack_exports__","colorPrimary","colorGray","typographicSmallFontSize","typographicBaseFontColor","polished__WEBPACK_IMPORTED_MODULE_0__","Math","round","children","react__WEBPACK_IMPORTED_MODULE_2___default","Wrapper","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","defaultTitle","module","exports","Object","defineProperty","value","_extends","assign","arguments","length","source","prototype","hasOwnProperty","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","DISQUS_CONFIG","__disqusAdded","copyProps","context","language","rest","keys","indexOf","_objectWithoutProperties","prop","page","callbacks","DisqusThread","_React$Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","subClass","superClass","create","constructor","setPrototypeOf","_inherits","loadDisqus","nextProps","nextState","_this2","reduce","memo","some","config","_defineProperty","id","child","disqus","document","parent","getElementsByTagName","async","type","src","appendChild","_this3","forEach","DISQUS","reset","reload","replace","window","disqus_config","addDisqusScript","displayName","propTypes","string","isRequired","func","defaultProps","location"],"mappings":"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","file":"component---src-templates-post-template-jsx-4f092becca8f4521da64.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactDisqusComments from 'react-disqus-comments'\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { toasts: [] }\n    this.notifyAboutComment = this.notifyAboutComment.bind(this)\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this)\n  }\n\n  onSnackbarDismiss() {\n    const [, ...toasts] = this.state.toasts\n    this.setState({ toasts })\n  }\n  notifyAboutComment() {\n    const toasts = this.state.toasts.slice()\n    toasts.push({ text: 'New comment available!!' })\n    this.setState({ toasts })\n  }\n  render() {\n    const { postNode, siteMetadata } = this.props\n    if (!siteMetadata.disqusShortname) {\n      return null\n    }\n    const post = postNode.frontmatter\n    const url = siteMetadata.url + postNode.fields.slug\n    return (\n      <ReactDisqusComments\n        shortname={siteMetadata.disqusShortname}\n        identifier={post.title}\n        title={post.title}\n        url={url}\n        category_id={post.category_id}\n        onNewComment={this.notifyAboutComment}\n      />\n    )\n  }\n}\n\nexport default Disqus\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport { lighten, darken } from 'polished'\nimport Disqus from '../Disqus/Disqus'\nimport { layoutPostSingleMaxWidth, typographicBaseFontSize, layoutPostSingleWidth, typographicLeading, colorGrayBg, colorBase, typographicBaseLineHeight, layoutBreakpointSm, layoutBreakpointMd, colorPrimary, colorSecondary } from '../../styles/variables'\n\n\nexport default class PostTemplateDetails extends Component {\n  render() {\n    const { subtitle, author } = this.props.data.site.siteMetadata\n    const post = this.props.data.markdownRemark\n    const tags = post.fields.tagSlugs\n\n    const homeBlock = (\n      <div>\n        <PostHomeButton to=\"/\">\n          All Articles\n        </PostHomeButton>\n      </div>\n    )\n\n    const tagsBlock = (\n      <PostTags>\n        <PostTagsList>\n          {tags &&\n            tags.map((tag, i) => (\n              <PostTagsListItem key={tag}>\n                <PostTagsListItemLink to={tag}>\n                  {post.frontmatter.tags[i]}\n                </PostTagsListItemLink>\n              </PostTagsListItem>\n            ))}\n        </PostTagsList>\n      </PostTags>\n    )\n\n    const commentsBlock = (\n      <div>\n        <Disqus\n          postNode={post}\n          siteMetadata={this.props.data.site.siteMetadata}\n        />\n      </div>\n    )\n\n    return (\n      <div>\n        {homeBlock}\n        <PostWrapper>\n          <PostInner>\n            <PostTitle>{post.frontmatter.title}</PostTitle>\n            <PostBody\n              /* eslint-disable-next-line react/no-danger */\n              dangerouslySetInnerHTML={{ __html: post.html }}\n            />\n            <PostDate>\n              <em>\n                Published {moment(post.frontmatter.date).format('D MMM YYYY')}\n              </em>\n            </PostDate>\n          </PostInner>\n          <PostFooter>\n            {tagsBlock}\n            <hr />\n            <PostFooterText>\n              {subtitle}\n              <a\n                href={`https://github.com/${author.github}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <br /> <strong>{author.name}</strong> on Github\n              </a>\n            </PostFooterText>\n            {commentsBlock}\n          </PostFooter>\n        </PostWrapper>\n      </div>\n    )\n  }\n}\n\n\nconst PostWrapper = styled.div``\n\nconst PostInner = styled.div`\n  max-width: ${layoutPostSingleMaxWidth}px;\n  padding: 0 15px;\n  margin: 0 auto;\n\n  @media screen and (min-width: ${layoutBreakpointMd}) {\n    padding: 0;\n  }\n`\n\nconst PostTitle = styled.h1`\n  font-size: ${typographicBaseFontSize * 2}px;\n  max-width: ${layoutPostSingleWidth}px;\n  margin-left: auto;\n  margin-right: auto;\n  font-weight: 600;\n  text-align: center;\n  line-height: ${1.65 * typographicLeading}px;\n  margin-top: ${1 * typographicLeading}px;\n  margin-bottom: ${0 * typographicLeading}px;\n\n  @media screen and (min-width: ${layoutBreakpointMd}) {\n    font-size: ${typographicBaseFontSize * 2.2}px;\n    line-height: ${2.25 * typographicLeading}px;\n    margin-top: ${2.25 * typographicLeading}px;\n    margin-bottom: ${1.5 * typographicLeading}px;\n  }\n`\n\nconst PostBody = styled.div`\n  & figure {\n    margin-bottom: ${1 * typographicLeading}px;\n\n    blockquote {\n      font-style: italic;\n      text-align: center;\n      margin-top: 0;\n      padding: ${1 * typographicLeading}px ${0 * typographicLeading}px;\n\n      p {\n        max-width: ${layoutPostSingleWidth}px;\n        font-size: ${typographicBaseFontSize * 1.6817}px;\n        margin-top: 0;\n        margin-bottom: ${1 * typographicLeading}px;\n        line-height: ${1.5 * typographicLeading}px;\n      }\n    }\n  }\n\n  & pre {\n    font-size: ${0.8 * typographicBaseFontSize}px;\n  }\n\n  & a {\n    text-decoration: underline;\n    color: ${colorSecondary};\n  }\n\n  & .gatsby-highlight {\n    max-width: ${layoutPostSingleWidth}px;\n    margin-left: 15px;\n    margin-right: 15px;\n    margin-bottom: ${1 * typographicLeading}px;\n  }\n\n  & :not(div) {\n    max-width: ${layoutPostSingleWidth}px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  @media screen and (min-width: ${layoutBreakpointSm}) {\n    $ .gatsby-highlight {\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n\n  @media screen and (min-width: ${layoutBreakpointMd}) {\n    font-size: ${typographicBaseFontSize * 1.025}px;\n    line-height: ${1.125 * typographicLeading}px;\n    margin-bottom: ${1.125 * typographicLeading}px;\n\n    $ p {\n      font-size: ${typographicBaseFontSize * 0.125}px;\n      line-height: ${1.125 * typographicLeading}px;\n      margin-bottom: ${1.125 * typographicLeading}px;\n    }\n  }\n`\n\nconst PostFooter = styled.div`\n  max-width: ${layoutPostSingleWidth}px;\n  margin-left: 15px;\n  margin-right: 15px;\n  line-height: ${1 * typographicLeading}px;\n  margin-top: ${1 * typographicLeading}px;\n  margin-bottom: ${2 * typographicLeading}px;\n  padding: 15px;\n\n  @media screen and (min-width: ${layoutBreakpointSm}) {\n    margin-left: auto;\n    margin-right: auto;\n  }\n`\n\nconst PostFooterText = styled.p`\n  & a {\n    text-decoration: underline;\n  }\n`\n\nconst PostDate = styled.div`\n  max-width: ${layoutPostSingleWidth}px;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst PostTags = styled.div`\n  margin-bottom: ${0.5 * typographicLeading}px;\n`\n\nconst PostTagsList = styled.ul`\n  list-style: none;\n  margin: 0 -5px;\n  padding: 0;\n`\n\nconst PostTagsListItem = styled.li`\n  display: inline-block;\n  margin: 10px 5px;\n`\n\nconst PostTagsListItemLink = styled(Link)`\n  background: ${colorGrayBg};\n  text-decoration: none;\n  border: 0;\n  border-radius: 3px;\n  color: ${lighten(0.2, colorBase)};\n  line-height: ${typographicBaseLineHeight}px;\n  padding: 8px 16px;\n\n  &:hover, &:focus {\n    color: ${colorBase};\n    background: ${darken(0.05, colorGrayBg)};\n    border: 0;\n  }\n`\n\nconst PostHomeButton = styled(Link)`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 90px;\n  font-size: ${typographicBaseFontSize}px;\n  padding: 0 16px;\n  height: 35px;\n  line-height: 35px;\n  text-align: center;\n  color: ${lighten(0.2, colorBase)};\n  background: ${colorGrayBg};\n  font-weight: 400;\n  border-radius: 3px;\n  margin-top: ${1 * typographicLeading}px;\n\n  &:hover, &:focus {\n    color: ${colorBase};\n    background: ${darken(0.05, colorGrayBg)};\n    border: 0;\n  }\n\n  @media screen and (min-width: ${layoutBreakpointMd}) {\n    position: fixed;\n    max-width: auto;\n    margin: 0;\n    top: 30px;\n    left: 30px;\n  }\n`\n","import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport PostTemplateDetails from '../components/PostTemplateDetails'\n\n\nexport default class PostTemplate extends Component {\n  render() {\n    const { title, subtitle } = this.props.data.site.siteMetadata\n    const post = this.props.data.markdownRemark\n    const { title: postTitle, description: postDescription } = post.frontmatter\n    const description = postDescription !== null ? postDescription : subtitle\n\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{`${postTitle} - ${title}`}</title>\n            <meta name=\"description\" content={description} />\n          </Helmet>\n          <PostTemplateDetails {...this.props} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        author {\n          name\n          github\n        }\n        disqusShortname\n        url\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        tagSlugs\n        slug\n      }\n      frontmatter {\n        title\n        tags\n        date\n      }\n    }\n  }\n`\n","import { lighten } from 'polished'\n\n\nexport const colorBase = '#050505'\nexport const colorPrimary = '#b91510'\nexport const colorSecondary = '#0d488b'\nexport const colorWhite = lighten(1, colorBase)\nexport const colorGray = lighten(0.4, colorBase)\nexport const colorGrayBorder = lighten(0.77, colorBase)\nexport const colorGrayBg = lighten(0.79, colorBase)\n\nexport const typographicFontFamily = '\"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif'\n\nexport const typographicRootFontSize = 100\nexport const typographicBaseFontSize = 16 // px\nexport const typographicSmallFontSize = 14 // px\nexport const typographicBaseLineHeight = 1.625\nexport const typographicBaseFontColor = colorBase\nexport const typographicLinkPFontColor = colorPrimary\nexport const typographicLinkSFontColor = colorSecondary\n\nexport const typographicLeading =\n    Math.round(16 * (typographicRootFontSize / 100) * typographicBaseLineHeight)\n\nexport const layoutPostSingleMaxWidth = '945' // px\nexport const layoutPostSingleWidth = `${layoutPostSingleMaxWidth} - 305` // px\n\nexport const layoutWidth = '1070px'\nexport const layoutBreakpointSm = '685px'\nexport const layoutBreakpointMd = '960px'\nexport const layoutBreakpointLg = '1100px'\n","import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\nimport '../../assets/scss/init.scss'\n\n\nexport default class Layout extends Component {\n  render() {\n    const { children } = this.props\n\n    return (\n      <Wrapper>\n        <Helmet defaultTitle=\"Blog by Jaeyo\" />\n        {children}\n      </Wrapper>\n    )\n  }\n}\n\nconst Wrapper = styled.div`\n  max-width: 66.875rem;\n  margin-left: auto;\n  margin-right: auto;\n`\n","'use strict';\n\nmodule.exports = require('./components/DisqusThread');","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment', 'language'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n    var onNewComment = props.onNewComment,\n        language = props.language,\n        rest = _objectWithoutProperties(props, ['onNewComment', 'language']);\n\n    for (var prop in rest) {\n        context.page[prop] = rest[prop];\n    }\n\n    // Setting the language - if none is provided, the default one is used\n    context.language = language;\n\n    if (onNewComment) {\n        context.callbacks = {\n            onNewComment: [onNewComment]\n        };\n    }\n}\n\nvar DisqusThread = function (_React$Component) {\n    _inherits(DisqusThread, _React$Component);\n\n    function DisqusThread() {\n        _classCallCheck(this, DisqusThread);\n\n        return _possibleConstructorReturn(this, (DisqusThread.__proto__ || Object.getPrototypeOf(DisqusThread)).apply(this, arguments));\n    }\n\n    _createClass(DisqusThread, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n            return nextProps.identifier !== this.props.identifier;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var props = Object.keys(this.props).reduce(function (memo, key) {\n                return DISQUS_CONFIG.some(function (config) {\n                    return config === key;\n                }) ? memo : _extends({}, memo, _defineProperty({}, key, _this2.props[key]));\n            }, {});\n\n            return _react2.default.createElement(\n                'div',\n                props,\n                _react2.default.createElement('div', { id: 'disqus_thread' })\n            );\n        }\n    }, {\n        key: 'addDisqusScript',\n        value: function addDisqusScript() {\n            if (__disqusAdded) {\n                return;\n            }\n\n            var child = this.disqus = document.createElement('script');\n            var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n            child.async = true;\n            child.type = 'text/javascript';\n            child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\n            parent.appendChild(child);\n            __disqusAdded = true;\n        }\n    }, {\n        key: 'loadDisqus',\n        value: function loadDisqus() {\n            var _this3 = this;\n\n            var props = {};\n\n            // Extract Disqus props that were supplied to this component\n            DISQUS_CONFIG.forEach(function (prop) {\n                // prop \"shortname\" is only necessary for loading the script, not for the config itself\n                if (prop !== 'shortname' && !!_this3.props[prop]) {\n                    props[prop] = _this3.props[prop];\n                }\n            });\n\n            // If Disqus has already been added, reset it\n            if (typeof DISQUS !== 'undefined') {\n                DISQUS.reset({\n                    reload: true,\n                    config: function config() {\n                        copyProps(this, props);\n\n                        // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n                        this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n                    }\n                });\n            } else {\n                // Otherwise add Disqus to the page\n                window.disqus_config = function () {\n                    copyProps(this, props);\n                };\n                this.addDisqusScript();\n            }\n        }\n    }]);\n\n    return DisqusThread;\n}(_react2.default.Component);\n\nDisqusThread.displayName = 'DisqusThread';\n\nDisqusThread.propTypes = {\n    id: _propTypes2.default.string,\n\n    /**\n     * `shortname` tells the Disqus service your forum's shortname,\n     * which is the unique identifier for your website as registered\n     * on Disqus. If undefined , the Disqus embed will not load.\n     */\n    shortname: _propTypes2.default.string.isRequired,\n\n    /**\n     * `identifier` tells the Disqus service how to identify the\n     * current page. When the Disqus embed is loaded, the identifier\n     * is used to look up the correct thread. If disqus_identifier\n     * is undefined, the page's URL will be used. The URL can be\n     * unreliable, such as when renaming an article slug or changing\n     * domains, so we recommend using your own unique way of\n     * identifying a thread.\n     */\n    identifier: _propTypes2.default.string,\n\n    /**\n     * `title` tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus for the first time.\n     * If undefined, Disqus will use the <title> attribute of the page.\n     * If that attribute could not be used, Disqus will use the URL of the page.\n     */\n    title: _propTypes2.default.string,\n\n    /**\n     * `url` tells the Disqus service the URL of the current page.\n     * If undefined, Disqus will take the window.location.href.\n     * This URL is used to look up or create a thread if disqus_identifier\n     * is undefined. In addition, this URL is always saved when a thread is\n     * being created so that Disqus knows what page a thread belongs to.\n     */\n    url: _propTypes2.default.string,\n\n    /**\n     * `category_id` tells the Disqus service the category to be used for\n     * the current page. This is used when creating the thread on Disqus\n     * for the first time.\n     */\n    category_id: _propTypes2.default.string,\n\n    /**\n     * `onNewComment` function accepts one parameter `comment` which is a\n     * JavaScript object with comment `id` and `text`. This allows you to track\n     * user comments and replies and run a script after a comment is posted.\n     */\n    onNewComment: _propTypes2.default.func,\n\n    /**\n     * `language` tells the Disqus service which language should be used.\n     * Please refer to https://www.transifex.com/disqus/disqus/ on which languages can be used\n     * If undefined, English is used as default one\n     */\n    language: _propTypes2.default.string\n};\n\nDisqusThread.defaultProps = {\n    url: typeof window === 'undefined' ? null : window.location.href\n};\n\nexports.default = DisqusThread;"],"sourceRoot":""}